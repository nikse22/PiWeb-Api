<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PiWeb.Api</name>
    </assembly>
    <members>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ArrayHelper">
            <summary>
            Helper class that splits an array into smaller arrays with a fixed segment size.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ArrayHelper.Split``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Func{``0,System.Int32})">
            <summary>
            This method splits the source enumeration into multiple smaller arrays with size <paramref name="targetSize"/>.
            The default weighting of every item is 1. A specific weighting can be calculated for every item with function <paramref name="calcWeightingOfOneItem"/>.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode">
            <summary>
            Enum which is used to define the authentication mode when communicating to a server.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode.NoneOrBasic">
            <summary>
            Send no certificate or windows token - eventually use username / password if the Server uses Basic-Authentication.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode.Windows">
            <summary>
            Use integrated Windows authentication.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode.Certificate">
            <summary>
            Use certificate authentication.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode.HardwareCertificate">
            <summary>
            Use hardware certification authentication
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.AuthenticationMode.OAuth">
            <summary>
            Use OAuth protocol authentication.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ICacheClearable">
            <summary>
            Interface for a cache that defines a method for clearing a cache entry for a specfific <see cref="T:System.Uri" />.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICacheClearable.InvalidateCache(System.Uri)">
            <summary>
            Clears a cache entry for the given <see cref="T:System.Uri" />.
            </summary>
            <param name="uri">The address for which a cache entry should be cleared.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ICertificateLoginRequestHandler">
            <summary>
            Interface that is used as callback handler for requests that need a certificate for authentification.
            </summary>
            <remarks>
            This interface is mainly designed for showing a user interface to the user for choosing the right certificate.
            </remarks>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.ICertificateLoginRequestHandler.CertificateStoreLocations">
            <summary>
            Gets a set of locations that should be used as locations for the certificate request.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICertificateLoginRequestHandler.CertificateRequestAsync(System.Uri,System.Boolean)">
            <summary>
            Asynchronous callback if a certificate for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which a certificate is requested.</param>
            <param name="preferHardwareCertificate">An option that is used to limit the list of possible certificates to hardware certificates only.</param>
            <returns>Returns a the certificate that should be used for authentication or null if no certificate should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICertificateLoginRequestHandler.CertificateRequest(System.Uri,System.Boolean)">
            <summary>
            Synchronous callback if a certificate for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which a certificate is requested.</param>
            <param name="preferHardwareCertificate">An option that is used to limit the list of possible certificates to hardware certificates only.</param>
            <returns>Returns a the certificate that should be used for authentication or null if no certificate should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            This is the synchronous counter part to <see cref="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICertificateLoginRequestHandler.CertificateRequestAsync(System.Uri,System.Boolean)"/> which stays usually unused by the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient"/>,
            since its API is fully asynchronous. This mainly exists for purpose of introducing a synchronous API if needed in the future.
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ILoginRequestHandler">
            <summary>
            Interface that is used as callback handler for the different kinds of credentials that can be used for authentification.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ICredentialLoginRequestHandler">
            <summary>
            Interface that is used as callback handler for requests that need a username/password credential for authentification.
            </summary>
            <remarks>
            This interface is mainly designed for showing a user interface to the user for entering the right username and password.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICredentialLoginRequestHandler.CredentialRequestAsync(System.Uri)">
            <summary>
            Asynchronous callback if a username nad password for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which a username and password is requested.</param>
            <returns>Returns a the username/password credential that should be used for authentication or null if no credential should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICredentialLoginRequestHandler.CredentialRequest(System.Uri)">
            <summary>
            Synchronous callback if a username and password for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which a username and password is requested.</param>
            <returns>Returns a the username/password credential that should be used for authentication or null if no credential should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            This is the synchronous counter part to <see cref="M:Zeiss.IMT.PiWeb.Api.Common.Client.ICredentialLoginRequestHandler.CredentialRequestAsync(System.Uri)"/> which stays usually unused by the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient"/>,
            since its API is fully asynchronous. This mainly exists for purpose of introducing a synchronous API if needed in the future.
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.IOAuthLoginRequestHandler">
            <summary>
            Interface that is used as callback handler for requests that use an OAuth token for authentification.
            </summary>
            <remarks>
            This interface is mainly designed for showing a user interface to the user for doing a OAuth login which usually opens a HTTP login formular.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.IOAuthLoginRequestHandler.OAuthRequestAsync(System.Uri,System.String)">
            <summary>
            Asynchronous callback if an OAuth token for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which an OAuth token is requested.</param>
            <param name="refreshToken">An optional refresh token that can be used to get a new OAuth token.</param>
            <returns>Returns an OAuth token that should be used for authentication or null if no OAuth token should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.IOAuthLoginRequestHandler.OAuthRequest(System.Uri,System.String)">
            <summary>
            Synchronous callback if an OAuth token for a <see cref="T:System.Uri"/> is requested.
            </summary>
            <param name="uri">The address for which an OAuth token is requested.</param>
            <param name="refreshToken">An optional refresh token that can be used to get a new OAuth token.</param>
            <returns>Returns an OAuth token that should be used for authentication or null if no OAuth token should be used.</returns>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">Throws a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException"/> if the request should be canceled.</exception>
            <remarks>
            This is the synchronous counter part to <see cref="M:Zeiss.IMT.PiWeb.Api.Common.Client.IOAuthLoginRequestHandler.OAuthRequestAsync(System.Uri,System.String)"/> which stays usually unused by the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient"/>,
            since its API is fully asynchronous. This mainly exists for purpose of introducing a synchronous API if needed in the future.
            The <see cref="T:System.Uri"/> usually refers to the base address of a server, since declared endpoints usually do not use different authentications.
            </remarks>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException">
            <summary>
            An <see cref="T:System.Exception"/> that is being used for indicating that a request is canceled.
            </summary>
            <remarks>
            This is usually raised by the user at the moment where credentials are requested.
            E.g. clicking on cancel in a login window.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The displayed message.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="exception">An inner exception.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.LoginCanceledException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="message">The displayed message.</param>
            <param name="exception">An inner exception.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition">
            <summary>
            Class that represents a parameter value (name and value) of an uri.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition.Name">
            <summary>
            Returns the name of the parameter.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition.Value">
            <summary>
            Returns the value of the parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition.Create(System.String,System.String)">
            <summary>
            Factory method to create a new <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.PushStreamContent">
            <summary>
            Special implementation of <see cref="T:System.Net.Http.HttpContent"/> that supports deferred streaming of the payload data.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreateGet(System.String,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new GET-<see cref="T:System.Net.Http.HttpRequestMessage"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreateDelete(System.String,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new DELETE-<see cref="T:System.Net.Http.HttpRequestMessage"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreatePost(System.String,Zeiss.IMT.PiWeb.Api.Common.Client.Payload,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new POST-<see cref="T:System.Net.Http.HttpRequestMessage"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The body of the HTTP message is provided by the <paramref name="payload"/> parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreatePut(System.String,Zeiss.IMT.PiWeb.Api.Common.Client.Payload,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new PUT-<see cref="T:System.Net.Http.HttpRequestMessage"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The body of the HTTP message is provided by the <paramref name="payload"/> parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.Create(System.Net.Http.HttpMethod,System.String,Zeiss.IMT.PiWeb.Api.Common.Client.Payload,System.Collections.Generic.KeyValuePair{System.String,System.String}[],Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpRequestMessage"/> for http verb <paramref name="method"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The body of the HTTP message is provided by the <paramref name="payload"/> parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreateInternal(System.Net.Http.HttpMethod,System.String,Zeiss.IMT.PiWeb.Api.Common.Client.Payload,System.Collections.Generic.KeyValuePair{System.String,System.String}[],Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpRequestMessage"/> for http verb <paramref name="method"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The body of the HTTP message is provided by the <paramref name="payload"/> parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreateWithAttachment(System.Net.Http.HttpMethod,System.String,System.IO.Stream,System.String,System.Nullable{System.Int64},System.Nullable{System.Guid},System.String,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpRequestMessage"/> for http verb <paramref name="method"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The attachment is provided by the <paramref name="stream"/> parameter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RequestBuilder.CreateWithAttachmentInternal(System.Net.Http.HttpMethod,System.String,System.IO.Stream,System.String,System.Nullable{System.Int64},System.Nullable{System.Guid},System.String,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpRequestMessage"/> for http verb <paramref name="method"/> based on the <paramref name="relativeUri"/> 
            and extended by possible additional query parameters represented by <paramref name="parameterDefinitions"/>
            The attachment is provided by the <paramref name="stream"/> parameter.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient">
            <summary>
            class for communication with REST based web services.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.MimeTypeJson">
            <summary>Mimetype für JSON</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.DefaultMaxUriLength">
            <summary>
            Default maximum length of the full URL inclusive any query string
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.MaximumPathSegmentLength">
            <summary>
            Maximum length a path segment within an uri my have
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.DefaultTimeout">
            <summary>
            Default-Timeout of 5 minutes, which is used by RestClient if no timeout is given explicitly.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.DefaultTestTimeout">
            <summary>
            Default-Timeout which should be used for connection checks or other simple operations
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.DefaultShortTimeout">
            <summary>
            Default-Timeout which should be used for short running operations.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.#ctor(System.Uri,System.String,Zeiss.IMT.PiWeb.Api.Common.Client.ILoginRequestHandler,System.Nullable{System.TimeSpan},System.Int32,System.Boolean)">
            <summary>Constructor.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.ResponseToStreamAsync(System.Net.Http.HttpResponseMessage)">
            <summary>
            Reads and returns the response stream.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.HandleClientBasedFaults(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles all responses with status codes between 400 and 499
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.HandleServerBasedFaults(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles all responses with status codes between 500 and 505
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.Timeout">
            <summary>
            Gets or sets the request timeout.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.UseDefaultWebProxy">
            <summary>
            Gets or sets if system default proxy should be used.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.ServiceLocation">
            <summary>
            Returns the endpoint address of the webservice.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClientException">
            <summary>
            Base class for client side exceptions that are thrown by the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient"/> in case of errors.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClientException.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClientException.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.RestClientException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException">
            <summary>
            Base class for server side exceptions that are thrown by the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.RestClient"/> in case of errors.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.Error,System.Net.Http.HttpResponseMessage)">
            <summary>
            Constructor.
            </summary>
            <param name="error">The server side error.</param>
            <param name="response">The http response that failed.</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException.Error">
            <summary>
            Returns the server side error.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException.StatusCode">
            <summary>
            Returns the http status.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException.Request">
            <summary>
            Returns the failed http request.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException.Response">
            <summary>
            Returns the failed http response.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.ServerBasedExceptions">
            <summary>
            Contains mappings of HTTP statuscodes to .NET based exceptions for server based exceptions (500 HTTP status codes)
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.IncludesNotFoundException(Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException)">
            <summary>
            Indicates if <paramref name="exception"/> includes an <see cref="T:System.ServiceModel.EndpointNotFoundException"/>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.IncludesExceptionOfType``1(Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException)">
            <summary>
            Indicates if <paramref name="exception"/> includes an exception of type <typeparam name="T" />
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.IsServerBasedFault(Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException)">
            <summary>
            Indicates if <paramref name="exception"/> includes an exception from <see cref="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.ServerBasedExceptions"/>
            and so is server based.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.IsClientBasedFault(Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorException)">
            <summary>
            Indicates if <paramref name="exception"/> does not include an exception from <see cref="P:Zeiss.IMT.PiWeb.Api.Common.Client.WrappedServerErrorExceptionExtensions.ServerBasedExceptions"/>
            and so is client based.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions">
            <summary>
            Extension class with various helper methods for attribute list manipulation.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Returns the attribute with the key <code>key</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16,System.Int32@)">
            <summary>
            Returns the attribute with the key <code>key</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetAttributeValue(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Returns the attribute's value of the attribute with the key <code>key</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetDoubleAttributeValue(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Returns the attribute's value of the attribute with the key <see cref="T:System.Double"/> as <code>double</code>.
            </summary>
            <remarks>
            If the attribute is either empty, does not exist or parsing fails <code>null</code> is returned.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetIntAttributeValue(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Returns the attribute's value of the attribute with the key <see cref="T:System.Int32"/> as <code>double</code>.
            </summary>
            <remarks>
            If the attribute is either empty, does not exist or parsing fails <code>null</code> is returned.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetDateAttributeValue(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Returns the attribute's value of the attribute with the key <see cref="T:System.DateTime"/> as <code>double</code>.
            </summary>
            <remarks>
            If the attribute is either empty, does not exist or parsing fails <code>null</code> is returned.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.GetRawAttributeValue(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16,Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection)">
            <summary>
            Returns the attribute's value of the attribute with the key <paramref name="key"/> If the attribute consists of a catalog entry the entry
            is returned, otherwise the attribute's value (string, int, double or DateTime) is returned.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.InsertNullAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Inserts or replaces the attribute for the given key with an attribute that is interpreted as deletion
            by merge models (effectively deleting the corresponding base attribute from existance)
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.SetAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16,System.String)">
            <summary>
            Sets the <code>value</code> for the attribute with the key <code>key</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.SetAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute)">
            <summary>
            Sets the <code>value</code> for the attribute with the key <code>key</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.AttributeItemExtensions.RemoveAttribute(Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem,System.UInt16)">
            <summary>
            Removes the attribute with the key <code>key</code>
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.ClientIdHelper">
            <summary>
            Hilfsklasse zur Ermittlung der ClientId die an die diversen Services gesendet wird.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.ClientIdHelper.ClientId">
            <summary> Default-Wert für die Client-ID die den einzelnen Webservice-Methoden mitgegeben wird. </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.ClientIdHelper.ClientProduct">
            <summary> Produkt-Name des Clients</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.ClientIdHelper.ClientVersion">
            <summary> Produkt-Version des Clients </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.ClientIdHelper.#cctor">
            <summary>
            Statischer Konstruktor.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeArrayConverter">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute"/> arrays.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeArrayConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeDefinitionConverter">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition"/>-objects.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeDefinitionConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeDefinitionConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.AttributeDefinitionConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.DataCharacteristicConverter">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataCharacteristic"/>-objects.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.DataCharacteristicConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.DataCharacteristicConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.DataCharacteristicConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.PathInformationConverter">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/>-objects.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.PathInformationConverter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.PathInformationConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.PathInformationConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingReaderConverter`1">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for streaming a list or an array.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingReaderConverter`1.CanWrite">
            <summary>
            Returns <code>false</code>. No write support.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingReaderConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingReaderConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object. Not supported right now.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingReaderConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not supported right now.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingWriterConverter`1">
            <summary>
            Specialized <see cref="T:Newtonsoft.Json.JsonConverter"/> for streamed writing a list or an array.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingWriterConverter`1.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingWriterConverter`1.CanRead">
            <summary>
            Returns <code>false</code>. No read support.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingWriterConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Not supported right now.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Converter.StreamingWriterConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.ServerError">
            <summary>
            The destination server has thrown an exception
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.InvalidServerVersion">
            <summary>
            The server version is not supported
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.MissingSynchronizationSettings">
            <summary>
            The synchronization settings are not set
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.EmptyDestinationUrl">
            <summary>
            The destination url is empty or invalid
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.InvalidPathRules">
            <summary>
            One or more path rules are empty or invalid
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.InvalidPath">
            <summary>
            The destination part path is empty or invalid
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.InvalidAttributeMapping">
            <summary>
            One or more attributes are mapped twice
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.UnavailablePath">
            <summary>
            The destination part path was not available, and creating was disabled.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.InvalidSynchronizationSettings">
            <summary>
            The synchronization settings are invalid
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.DatabaseSynchronizationResult.SynchronizationSettingsError">
            <summary>
            The synchronization settings are not set or invalid
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Formatter.FilterTreeFormatter.FormatString(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.IFilterTree)">
            <exception cref="T:System.ArgumentNullException"><paramref name="tree"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Formatter.LegacyFilterTreeFormatter.FormatString(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.IFilterTree)">
            <exception cref="T:System.ArgumentNullException"><paramref name="tree"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.LexicalToken.ToString">
            <summary>
            Überschriebene <see cref="M:System.Object.ToString"/>-Methode.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.TokenType,System.String)">
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.TokenType,Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.LexicalToken)">
            <exception cref="T:System.ArgumentNullException"><paramref name="lexicalToken"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.TokenType,System.String,Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.LexicalToken)">
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="lexicalToken"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.FilterTree.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token)">
            <exception cref="T:System.ArgumentNullException"><paramref name="token"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.FilterTree.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token,System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.IFilterTree})">
            <exception cref="T:System.ArgumentNullException"><paramref name="token"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.FilterTree.#ctor(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.Token,Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.IFilterTree)">
            <exception cref="T:System.ArgumentNullException"><paramref name="token"/> is <see langword="null" />.</exception>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem">
            <summary>
            Interface für Objekte, die eine Liste von Attributen zur Verfügung stellen.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.IAttributeItem.Attributes">
            <summary>
            Gibt alle Attribute als Feld zurück.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper">
            <summary>Helper class for converting <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> objects to strings and vice versa.</summary>
            <remarks>
            There are two string models for paths. Database string and colloquial strings. Delimiter = "/". Escape = "\"
            
            Database string is used in the database tables and has a very strict model. It starts and ends with a delimiter. No empty
            path components are allowed. Delimiters are quoted with escapes and escapes are quoted with escapes. The root path is
            represented as "/" with structure "" or <code>null</code>. Together with the structure full roundtrip is always possible
            and consistent.
            
            Colloquial string is your everyday path as string representation. It has a less strict model with optional escaping. It allows for
            a full roundtrip conversion if handled correctly. It may start with a delimiter. It must not end with a delimiter.
            No empty path components are allowed. Delimiters are quoted with escapes and escapes are quoted with escapes.
            The root path is represented as "/". An empty string is not allowed! Full roundtrip conversion maybe be possible but may not be consistent.
            
            Methods in this class are either internal and handle the database string format and enforce it or are public and handle the
            colloquial string format.
            
            Examples (d = database, c = colloquial)
            d /
            c /
            
            d /part/
            c /part
            c part
            
            d /part/subpart/
            c /part/subpart
            c part/subpart
            
            d /part_with_slash\//
            c /part_with_slash\/
            c part_with_slash\/
            
            d /part_with_slash\//subpart_with_slash\//
            c /part_with_slash\//subpart_with_slash\/
            c part_with_slash\//subpart_with_slash\/
            
            d /part_with_backslash\\/
            c /part_with_backslash\\
            c part_with_backslash\\
            
            3. format "roundtrip" needed that contains the path structure and the path as database string.
            This string can be converted back into a PathInformation object without further information.
            
            Examples:
            P:/part/
            PP:/part/subpart/
            PC:/part/characteristic/
            PCC:/part/characteristic/characteristic/
            
            The roundtrip string for the root part is special and is represented as "/" (no structure information needed).
            </remarks>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.Delimiter">
            <summary> Delimiter character for the path components. </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.EscapedDelimiter">
            <summary> Escaped delimiter character for the path components </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.DelimiterString">
            <summary> Delimiter string for the path components </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.Escape">
            <summary> Escape character for delimiter characters. </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.EscapeString">
            <summary> Escape character as string for delimiter characters. </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.String2PartPathInformation(System.String)">
            <summary>
            Creates from <paramref name="path"/> in colloquial format a part <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.String2CharPathInformation(System.String)">
            <summary>
            Creates from <paramref name="path"/> in colloquial format a characteristic <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.ColloquialString2PathInformationInternal(System.String,Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity)">
            <summary>
            Creates from <paramref name="path"/> in colloquial format a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> object.
            All path elements will be of the type given in <paramref name="entity"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.RoundtripString2PathInformation(System.String)">
            <summary>
            Creates from <paramref name="path"/> in roundtrip format ("structure:database path") a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.DatabaseString2PathInformation(System.String,System.String)">
            <summary>
            Creates from <paramref name="path"/> in database format a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> object.
            Depending on <paramref name="structure"/> it will be a part or a characteristic.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.PathInformation2String(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary>
            Converts <paramref name="path"/> to a string in colloquial format.
            The result for a the root path is always "/".
            For all other paths the result does NOT start with a delimiter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.PathInformation2RoundtripString(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary>
            Converts <paramref name="path"/> to a string in roundtrip format ("structure:database path").
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.PathInformation2DatabaseString(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary>
            Converts <paramref name="path"/> to a string in database format.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.PathHelper.GetStructure(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary>
            Returns the structure of the <paramref name="path"/>.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper">
            <summary>
            Helper class for REST webservice calls.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.QueryListStart">
            <summary>Start identifier for a list inside a HTTP query.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.QueryListStop">
            <summary>End identifier for a list inside a HTTP query.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.LengthOfEscapedDelimiter">
            <summary>Length of escaped delimiter for list values within <see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.QueryListStart"/> 
            and <see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.QueryListStop"/> inside a HTTP query ( , escaped => %2C)</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.DeserializeObject``1(System.IO.Stream)">
            <summary>
            Deserializes the <paramref name="data"/>-stream into a new object of type <typeparamref name="T"/>. The data is expected to be in JSON format.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.DeserializeBinaryObject``1(System.IO.Stream)">
            <summary>
            Deserializes the <paramref name="data"/>-stream into a new object of type <typeparamref name="T"/>. The data is expected to be in BSON format.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.DeserializeEnumeratedObject``1(System.IO.Stream)">
            <summary>
            Deserializes the <paramref name="data"/>-stream into a new enumerable object of type <typeparamref name="T"/>. The data is expected to be in JSON format.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ParseToParameter(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Guid[],System.Guid[],System.Nullable{System.UInt16},Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean)">
            <summary>
            Parses inspection plan filter criterias to a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition"/> list.
            </summary>
            <param name="partPath">Path of the part the query should be restricted by.</param>
            <param name="partUuids">Uuids of the parts the query should be restricted by.</param>
            <param name="charUuids">Uuids of the parts the query should be restricted by.</param>
            <param name="depth">The depth determines how deep the response should be.</param>
            <param name="requestedPartAttributes">Restricts the part attributes that are returned.</param>
            <param name="requestedCharacteristicAttributes">Restricts the characteristic attributes that are returned.</param>
            <param name="withHistory">Determines if the history should be returned.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ConvertStringToUInt16List(System.String)">
            <summary>
            Parses a string to a list of ushorts.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ConvertStringToGuidList(System.String)">
            <summary>
            Parses a string to a list of Guids.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ParseListToStringArray(System.String)">
            <summary>Parses a list of strings.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ConvertUshortArrayToString(System.UInt16[])">
            <summary>Creates a list string from the ushorts <code>value</code>.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ConvertShortArrayToString(System.Int16[])">
            <summary>Creates a list string from the shorts <code>value</code>.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ConvertGuidListToString(System.Guid[])">
            <summary>Creates a list string from the uuids <code>value</code>.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.ToListString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Creates a list string from <paramref name="list"/>.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.LengthOfListElementInUri``1(``0)">
            <summary>
            Returns the length of an elment of type <typeparam name="T"/> within an uri
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.GetUriTargetSize(System.Uri,System.String,System.Int32,Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition[])">
            <summary>
            Provides the remaining size for parameters calculated by difference of <paramref name="maxUriLength"/> and the combination <paramref name="serviceLocation"/>, <paramref name="requestPath"/> and <paramref name="parameterDefinitions"/>
            <remarks><paramref name="requestPath"/> and <paramref name="parameterDefinitions"/> must not contain any values (except for lists: empty brackets) but only fix parameter name </remarks>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.RestClientHelper.CreateJsonSerializer">
            <summary>
            Creates and configures the <see cref="T:Newtonsoft.Json.JsonSerializer"/> that are needed by the services.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser">
            <summary>
            Parser class for search condition strings. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser.CanParse(System.String)">
            <summary>
            Returns <code>true</code> if the search filter is valid and can be parsed.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser.GenericConditionToString(Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition)">
            <summary>
            Converts the search filter into a string.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser.FindFirst(System.String,System.Collections.Generic.IEnumerable{System.String},System.Int32)">
            <summary>
            Finds the first  das erste Vorkommens eines beliebigen Strings aus dem values-Array.
            </summary>
            <param name="str">String in dem gesucht wird.</param>
            <param name="values">Strings nach denen gesucht wird.</param>
            <param name="startIndex">Index von dem an im String gesucht wird.</param>
            <returns>Der erste vorkommende String, ansonsten null.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser.Parse(System.String)">
            <summary>
            Parses the search filter string.
            </summary>
            <param name="searchFilter">The search filter string.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.SearchConditionParser.TryParse(System.String,Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition@)">
            <summary>
            Tries to parse the <code>searchFilter</code> and returns the filter as a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition"/> if successful.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools">
            <summary> 
            Helper class to convert a pair of measurementUuid and characteristicUuid to a string in form measurementUuid|characteristicUuid and vice versa. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.SplitStringUuidPair(System.String)">
            <summary> Splits a string containig a measurementUuid and a characteristicUuid in form measurementUuid|characteristicUuid. </summary>
            <exception cref="T:System.InvalidOperationException">The syntax of <paramref name="uuidPair"/> is invalid.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.CreateStringUuidPair(System.Guid,System.Guid)">
            <summary> Creates a string containig a measurementUuid and a characteristicUuid in form measurementUuid|characteristicUuid. </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.CreateStringUuidPair(Zeiss.IMT.PiWeb.Api.Common.Data.ValueRawDataIdentifier)">
            <summary> Creates a string containig a measurementUuid and a characteristicUuid in form measurementUuid|characteristicUuid. </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.IsStringUuidPair(System.String)">
            <summary> Checks if a given string is a unique UUID pair (in form measurementUuid|characteristicUuid) </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.CheckUuids(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentOutOfRangeException">The syntax of any uuid in <paramref name="uuids"/> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="uuids"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.CheckUuid(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.String)">
            <exception cref="T:System.ArgumentOutOfRangeException">The syntax of <paramref name="uuid"/> is invalid.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.StringUuidListToGuidList(System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentOutOfRangeException">The syntax of any uuid in <paramref name="uuids"/> is invalid.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="uuids"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.StringUuidTools.StringUuidToGuid(System.String)">
            <exception cref="T:System.ArgumentOutOfRangeException">The syntax of <paramref name="uuid"/> is invalid.</exception>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.Error">
            <summary> 
            Class holds an error which can occur on calling a webservice method. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Error.#ctor">
            <summary> 
            Constructor 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Error.#ctor(System.String)">
            <summary> 
            Constructor 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Error.#ctor(System.Exception)">
            <summary> 
            Constructor 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Error.Message">
            <summary> 
            Returns the error description message.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Error.ExceptionMessage">
            <summary>
            The exception message that might be generated on the server side.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Error.ExceptionType">
            <summary>
            The type of exception that might be generated on the server side.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Error.StackTrace">
            <summary>
            The stack trace of the exception that might be generated on the server side.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.Error.InnerError">
            <summary>
            The nested <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Data.Error"/> instance that triggered the current error.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Data.Error.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.ValueRawDataIdentifier">
            <summary>
            References an identifier for a measured values raw data. Consists of the measurement uuid and the characteristic uuid. 
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries">
            <summary>
            Static class with well known catalog entries.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Characteristic">
            <summary>
            Well known catalog entries for characteristics.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Characteristic.Type">
            <summary>
            Catalog entries for the characteristic type.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Characteristic.Type.Variable">
            <summary>
            The characteristic is a variable characteristic (measurement values are double values).
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Characteristic.Type.Attributive">
            <summary>
            The characteristic is a attributive characteristic (measurement values are integers that 
            specify the index of the corresponding measurement value catalog).
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Characteristic.Type.Counter">
            <summary>
            The characteristic is a counting characteristic (measurement values are integers specify a count).
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement">
            <summary>
            Well known catalog entries for measurements.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval">
            <summary>
            Catalog entries for the measurement aggregation interval.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval.Undefined">
            <summary>Undefined.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval.Hourly">
            <summary>Hourly.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval.Daily">
            <summary>Daily.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval.Weekly">
            <summary>Weekly.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.AggregationInterval.Monthly">
            <summary>Monthly.</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.Status">
            <summary>
            Catalog entries for the measurement status.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.Status.Undefined">
            <summary>Undefined.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.Status.Valid">
            <summary>Valid</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownCatalogEntries.Measurement.Status.Blocked">
            <summary>Blocked</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys">
            <summary>
            Static class with well known attribute keys.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part">
            <summary>Well known keys for accessing part attributes.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Number">
            <summary>Part number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Description">
            <summary>Part description</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Abbreviation">
            <summary>Part abbreviation</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.DrawingStatus">
            <summary>Drawing status</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Line">
            <summary>Line</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.ControlItem">
            <summary>Documented flag</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.VariantOfLine">
            <summary>Model</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.DrawingNumber">
            <summary>Drawing number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.DrawingName">
            <summary>Drawing name</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Operation">
            <summary>Operation</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Organisation">
            <summary>Organization</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CostCenter">
            <summary>Cost center</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.InspectionType">
            <summary>Inspection type</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Plant">
            <summary>Production plant</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CallbackUri">
            <summary>
            The uri that can be used to create an interactive hyperlink that calls another application. This is used by PiWeb Monitor 
            for example to switch back to the measuring application (Calypso, Caligo etc.) when clicking on a characteristic or part.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CallbackUriText">
            <summary>
            This is a descriptive text for the <see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CallbackUri"/>.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.AdjustmentDate">
            <summary>Abstimmungsdatum</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CreationDate">
            <summary>Eingegeben am</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.CreatedBy">
            <summary>Eingegeben von</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.UpdateDate">
            <summary>Geändert am</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.UpdatedBy">
            <summary>Geändert von</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.OrganisationalUnit">
            <summary>Organisiationseinheit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.ProductionLine">
            <summary>Straße</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Responsible">
            <summary>Verantwortlich</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Part.Comment">
            <summary>Comment</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic">
            <summary>Well known keys for accessing part characteristic.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Number">
            <summary>Characteristic number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Description">
            <summary>Characteristic description</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Abbreviation">
            <summary>Characteristic abbreviation</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Direction">
            <summary>Characteristic direction</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.GroupType">
            <summary>Characteristic group type</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.MeasurementPointRole">
            <summary>Measurement point role</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Position">
            <summary>Position of a characteristic (left; right)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Orientation">
            <summary>Orientation of a characteristic (X; Y; Z; ...)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.ControlItem">
            <summary>Documented flag</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.DistributionType">
            <summary>Distribution type</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LogicalOperationString">
            <summary>The formula that describes a calculated characteristics</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.DecimalPlaces">
            <summary>Number decimal places</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.DesiredValue">
            <summary>Desired value</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.NominalValue">
            <summary>Nominal value</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerSpecificationLimit">
            <summary>Lower specification limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperSpecificationLimit">
            <summary>Upper specification limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerTolerance">
            <summary>Lower tolerance limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperTolerance">
            <summary>Upper tolerance limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerScrapLimit">
            <summary>Lower scrap limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperScrapLimit">
            <summary>Upper scrap limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerNaturallyBoundary">
            <summary>Lower natural boundary</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperNaturallyBoundary">
            <summary>Upper natural boundary</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Unit">
            <summary>The unit (mm, inch, °, etc.)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.NameOfQualityControlPlan">
            <summary>Name of inspection plan</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.I">
            <summary>Normal vector, x coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.J">
            <summary>Normal vector, y coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.K">
            <summary>Normal vector, z coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.X">
            <summary>Position, x coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Y">
            <summary>Position, y coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Z">
            <summary>Position, z coordinate</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Layer">
            <summary>Layer</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.HasStamp">
            <summary>
            Stamp text
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampCaption">
            <summary>
            Stamp text
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampPositionX">
            <summary>
            Stamp position, x coordinate relative to bitmap
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampPositionY">
            <summary>
            Stamp position, y coordinate relative to bitmap
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampTargetX">
            <summary>
            Stamp target, x coordinate relative to bitmap
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampTargetY">
            <summary>
            Stamp target, y coordinate relative to bitmap
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.StampRadius">
            <summary>
            Stamp radius relative to the bitmap width
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiCategory">
            <summary>AUDI: Kategorie (Analysemaß; Bemusterungsmaß; Netzmaß; ...)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiFunctionGroup">
            <summary>AUDI: Funktionsgruppe</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.PBMS">
            <summary>AUDI: Kennzeichnung von PBMS-Punkten (Wert=1)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Inline">
            <summary>AUDI: Kennzeichnung von Inline-Punkten (Wert=1)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Symmetric">
            <summary>AUDI: Kennzeichnung von symmetrischen Merkmale (Wert=1)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.ManualToleranceInput">
            <summary>AUDI: Kennzeichnung von manueller Toleranzeingabe</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.FM_Relevant">
            <summary>AUDI: Kennzeichnung von FM relevanten Punkten (Wert=1). FM relevante Merkmale sind 
            üblicherweise die Merkmale, aus denen ein Funktionsmaß gebildet wird (z.B. die Einzelpunkte 
            einer Distanz).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AuditFunction">
            <summary>Auditfunktion</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerControlLimit">
            <summary>Untere Eingriffgrenze</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperControlLimit">
            <summary>Obere Eingriffgrenze</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LowerWarningLimit">
            <summary>Untere Warngrenze</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.UpperWarningLimit">
            <summary>Obere Warngrenze</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.CharacteristicType">
            <summary>Merkmalsart (variabel; attributiv und attributiv zählend)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.MeasurementValueCatalog">
            <summary>Messwertkatalog zur Auswertung attributiver Merkmale</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.PlotMeasurand">
            <summary>Messgroesse (fuer Formplot)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.CharacteristicSpecification">
            <summary>Typ des Merkmals (Circle; Cone; Plane; ...)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Text1">
            <summary>Beschreibungstext 1 des Merkmals</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Text2">
            <summary>Beschreibungstext 2 des Merkmals</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Text3">
            <summary>Beschreibungstext 3 des Merkmals</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.Category">
            <summary>Dem Merkmal zugeordnete Kategorie.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.FeatureName">
            <summary>Name des Messelementes des Merkmals</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.OperationType">
            <summary>Typ der Verknüpfung (SYM; DIST; ..) eines Merkmals</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiMeasurementProgram">
            <summary>Messprogramm</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiSectionalPlane">
            <summary>Schnittebene</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiFmk">
            <summary>FMK-Kennung</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiToleranceChain">
            <summary>Tolerenzkette</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.AudiMeasuringPrinciple">
            <summary>Messprinzip</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.CallbackUri">
            <summary>
            The uri that can be used to create an interactive hyperlink that calls another application. This is used by PiWeb Monitor 
            for example to switch back to the measuring application (Calypso, Caligo etc.) when clicking on a characteristic or part.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.CallbackUriText">
            <summary>
            This is a descriptive text for the <see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.CallbackUri"/>.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.MeasuredQuantityType">
            <summary>Measured quantity type</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.PdaSampleSize">
            <summary>The sample size for a process distribution analysis.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.PdaSampleType">
            <summary>
            Identifying different creation types of multi-samples for process distribution analysis.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.DistributionAnalysisMode">
            <summary>
            Identifying the different modes for distribution analysis.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartConfiguration">
            <summary>Regelkartenkonfiguration der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartAverageValue">
            <summary>Mittellinie der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartLowerControlLimit">
            <summary>Untere Eingriffgrenze der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartUpperControlLimit">
            <summary>Obere Eingriffgrenze der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartLowerWarningLimit">
            <summary>Untere Warngrenze der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.LocationChartUpperWarningLimit">
            <summary>Obere Warngrenze der Lagekarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartConfiguration">
            <summary>Regelkartenkonfiguration der Streuungskarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartAverageValue">
            <summary>Mittellinie der Streuungskarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartLowerControlLimit">
            <summary>Untere Eingriffgrenze der Streuungskarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartUpperControlLimit">
            <summary>Obere Eingriffgrenze der Streuungskarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartLowerWarningLimit">
            <summary>Untere Warngrenze der Streuungskarte</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Characteristic.VariationChartUpperWarningLimit">
            <summary>Obere Warngrenze der Streuungskarte</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement">
            <summary>Well known keys for accessing measurement attributes.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Time">
            <summary>Time</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.EventId">
            <summary>Event Id</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.BatchNumber">
            <summary>Batch number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.InspectorName">
            <summary>Inspector name</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Comment">
            <summary>Comment</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.MachineNumber">
            <summary>Machine number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.ProcessId">
            <summary>Process Id</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.InspectionEquipment">
            <summary>Inspection equipment</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.ProcessValue">
            <summary>Process value</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.PartsId">
            <summary>Part Id</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.InspectionType">
            <summary>Inspection type</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.ProductionNumber">
            <summary>Inspection number</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Contract">
            <summary>Contract</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Shift">
            <summary>Shift</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.PartNumberIncremental">
            <summary>Incremental part number from CALYPSO / CALIGO</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.MeasurementStatus">
            <summary>Measurement status (approved; blocked; ...)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.MeasurementChangeDate">
            <summary>Measurement change date</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.MeasurementChangedBy">
            <summary>Measurement changed by</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.AggregationJobUuid">
            <summary>Contains the uuid of the aggregation job that created this measurement. Empty if this measurement is not an aggregated measurement.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.AggregationInterval">
            <summary>Contains the aggregation interval that was used to create this aggregated measurement.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.AggregatedMeasurementCount">
            <summary>Contains the number of original measurements that this aggregated measurement is based on.</summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.AggregatedMeasurementKeys">
            <summary>
            Collection of all measurement attributes specific for aggregated measurements
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog">
            <summary>Well known keys for accessing value attributes.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.AuditFunctionGroupKey">
            <summary>Auditkatalog: Funktionsgruppe</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.AuditPriorityKey">
            <summary>Auditkatalog: Priorität</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.ColorSchemePositionKey">
            <summary>Color scheme position</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.StatusColorKey">
            <summary>Status color</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.LowerClassLimitKey">
            <summary>Lower class limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.UpperClassLimitKey">
            <summary>Upper class limit</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.DistributionTypeKey">
            <summary>The key for the distribution type.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.MeasuredQuantityTypeKey">
            <summary>The key for the measured quantity type.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.PdaSampleTypeDescription">
            <summary>The description of the pda sample type.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.PdaSampleTypeKey">
            <summary>The key for the pda sample type.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.DistributionAnalysisModeDescription">
            <summary>The description for the distribution analysis mode.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Catalog.DistributionAnalysisModeKey">
            <summary>The key for the distribution analysis mode.</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value">
            <summary>Well known keys for accessing value attributes.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.MeasuredValue">
            <summary>Measured value</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedMinimum">
            <summary>Key for a measurement value attribute that contains the minimum (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedMaximum">
            <summary>Key for a measurement value attribute that contains the maximum (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedRange">
            <summary>Key for a measurement value attribute that contains the range (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedMean">
            <summary>Key for a measurement value attribute that contains the mean value (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedSigma">
            <summary>Key for a measurement value attribute that contains the sigma (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedMedian">
            <summary>Key for a measurement value attribute that contains the median (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedLowerQuartile">
            <summary>Key for a measurement value attribute that contains the lower quartile (0.25 quantile) (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedUpperQuartile">
            <summary>Key for a measurement value attribute that contains the upper quartile (0.75 quantile) (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedCp">
            <summary>Key for a measurement value attribute that contains the cp value (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedCpk">
            <summary>Key for a measurement value attribute that contains the cpk value (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedValueCount">
            <summary>Key for a measurement value attribute that contains the number of values (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedYellowRange">
            <summary>Key for a measurement value attribute that contains the number of characterteristics within yellow range (calculated by an aggregation job for example).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedRedRange">
            <summary>Key for a measurement value attribute that contains the number of characterteristics within red range (calculated by an aggregation job for example).</summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Value.AggregatedValueKeys">
            <summary>
            Collection of all measurement value attributes specific for aggregated measurements
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures">
            <summary>
            Static class with constants that are used by <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.FeatureList"/>
            to indicate the availability of certain server features.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.MergeAttributes">
            <summary>Server supports server side querying of merged measurements (like a primary key for measurement search).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.MergeConditions">
            <summary>Server supports defining conditions ('MergeCondition' + 'MergeMasterPart')
            for server side querying of merged measurements (like a primary key for measurement search).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.MeasurementAggregation">
            <summary>Server supports the measurement aggregation feature.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.DistinctMeasurementSearch">
            <summary>Server supports the distinct search for specific attribute values.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.ReadOnlyDatabase">
            <summary>The server database is readonly and cannot be modified.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.JobEngineNotSupported">
            <summary>The server does not support jobs.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.CharacteristicsBelowRoot">
            <summary>The server supports characteristics below the root part and messurements attached to the root part.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.CatalogAttributesUpdate">
            <summary>The server supports the modification of catalog attributes without data loss
            (without this feature the only possibility is to delete and recreated the catalog).</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.IgnoreSearchFilterSupport">
            <summary>The server supports the ignore search filter flag for users and groups.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownServerFeatures.MeasurementLimitResultInt32">
            <summary>The server supports measurement filter attributes with a LastN value greater than <see cref="F:System.Int16.MaxValue"/>.</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateCredential">
            <summary>
            Credential that contains certificate information.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Constructor.
            </summary>
            <param name="certificate"></param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateCredential.Certificate">
            <summary>
            Returns the chosen certificate.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateCredential.DisplayId">
            <summary>
            Return a text that can be used for displaying.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateHelper.HasValidChain(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509RevocationMode)">
            <summary>
            Determines if the given certificate has a valid certificate chain.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateHelper.IsCertificateAuthority(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Determines if the given certificate is certificate authority - CA.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateHelper.IsServerAuthenticationCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Determines if the given certificate is valid for server authentication (extended key usage "1.3.6.1.5.5.7.3.1").
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateHelper.IsClientAuthenticationCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Determines if the given certificate is valid for client authentication (extended key usage "1.3.6.1.5.5.7.3.2").
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CertificateHelper.IsHardwareCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
            <summary>
            Detemines if the given certificate is a hardware certificate.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterDefinition`1">
            <summary>
            Represents a HTTP GET parameter that has a collection of values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterDefinition`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0},System.Func{System.Collections.Generic.IEnumerable{`0},System.String})">
            <summary>
            Creates a CollectionParameter that can be split.
            </summary>
            <param name="name">Name of the collection parameter, e.g. 'uuids'</param>
            <param name="values">The separate values as string.</param>
            <param name="toStringConverter">A function to convert the parameter list to a string</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterDefinition`1.Split(System.Int32)">
            <summary>
            Split the values into smaller chunks, e.g. to prevent URIs that are too long.
            </summary>
            <param name="maxLength">The maximum length of the resulting value string.</param>
            <returns>
            A collection of parameter definitions that all have the same name, but whose
            value is always shorter than <paramref name="maxLength"/>.
            </returns>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterFactory">
            <summary>
            Helper Factory to create typed CollectionParameterDefinitions.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.ICredential">
            <summary>
            Common interface for authentication credentials.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.ICredential.DisplayId">
            <summary>
            Return a text that can be used for displaying.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.OAuthHelper.DiscoverOpenIdAuthorityAsync(System.String)">
            <summary>
            get openid authority info from service without any authentication
            FUTURE: use the WebFinger method discovery method described in OpenID connect specification section 2
            <seealso>
                <cref>https://openid.net/specs/openid-connect-discovery-1_0.html#IssuerDiscovery</cref>
            </seealso>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.OAuthHelper.WaitForFileStream(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Inspired by https://stackoverflow.com/a/3677960
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.UsernamePasswordCredential">
            <summary>
            Credential that contains username / Password information.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.UsernamePasswordCredential.#ctor(System.String,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.UsernamePasswordCredential.Username">
            <summary>
            Return the username.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.UsernamePasswordCredential.Password">
            <summary>
            Returns the password.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.Common.Utilities.UsernamePasswordCredential.DisplayId">
            <summary>
            Return a text that can be used for displaying.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.Common.Utilities.ParameterSplitter">
            <summary>
            Used to split collection parameters into smaller chunks, to prevent errors caused by long URIs.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.ParameterSplitter.SplitAndMerge``1(Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterDefinition{``0},System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition})">
            <summary>
            Split the passed parameter collection into smaller chunks and merge each chunk with the rest of the parameters.
            </summary>
            <param name="collectionParameter">The collection parameter to split.</param>
            <param name="otherParameters">All other parameters that are part of the request, e.g. 'filter'.</param>
            <returns>A list of all parameter definitions for each chunk of the collection.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.ParameterSplitter.DetermineMaxLength``1(Zeiss.IMT.PiWeb.Api.Common.Utilities.CollectionParameterDefinition{``0},System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition})">
            <summary>
            Determine the maximum lenght per value string.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.Common.Utilities.ParameterSplitter.MergeWithOtherParameters(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition},System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition})">
            <summary>
            Merge split parameters with the other parameters.
            </summary>
            <returns>The complete set of parameters for each of the <paramref name="splitParameters"/></returns>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition">
            <summary>
            Abstract base class of <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogAttributeDefinition"/> ans <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition"/>.
            It holds attribute's base properties key and description.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.#ctor(System.UInt16,System.String,System.Boolean)">
            <summary>
            Constructor. Initializes a new definition using the specified key and value.
            </summary>
            <param name="key">The unique key for this attribute</param>
            <param name="description">The attribute description</param>
            <param name="queryEfficient"><code>true</code> if this attribute is efficient for filtering operations</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.Key">
            <summary>
            Gets or sets the key for this attribute definition.
            The key is the attribute's unique identifier.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.Description">
            <summary>
            Gets or sets the name of this attribute definition.
            The attribute's name which is displayed in UI.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.QueryEfficient">
            <summary>
            Determines whether this attribute is efficient for filtering operations.
            </summary>
            <remarks>
            This flag is currently unused. This may be used in future web service versions.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection">
            <summary>
            Enumeration that specifies the which types of measurements will be fetched from the database.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection.Measurements">
            <summary>Fetch normal measurements.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection.AggregationMeasurements">
            <summary>Fetch aggregated measurements</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection.Default">
            <summary>Default behavior (fetch normal measurements only)</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection.All">
            <summary>Fetch all measurements (normal and aggregated).</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection">
            <summary>
            Enumeration that determines which attributes for a specific will be returned.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection.True">
            <summary>
            If this enumeration value is specified in a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector"/>, all attributes 
            will be returned.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection.False">
            <summary>
            If this enumeration value is specified in a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector"/>, only a subset of attributes 
            which are specified via <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.Attributes"/> will be returned.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection.QueryEfficient">
            <summary>
            If this enumeration value is specified in a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector"/>, only attributes which are
            marked as <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition.QueryEfficient"/> will be returned.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute">
            <summary>
            Holds the unique key as well as description and further characterizes an entity.
            </summary>
            <remarks>This class is immutable.</remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.#ctor(System.UInt16,System.String)">
            <summary>
            Creates a new attribute with key <code>key</code> and value <code>value</code>.
            </summary>
            <param name="key">The key of the newly created attribute.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.#ctor(System.UInt16,System.Object)">
            <summary>
            Creates a new attribute with key <code>key</code> and value <code>rawValue</code>.
            </summary>
            <param name="key">The key of the newly created attribute.</param>
            <param name="rawValue">The raw value.</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.Key">
            <summary>
            Returns the key of this attribute.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.RawValue">
            <summary>
            Returns the unparsed attribute value of this attribute.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.Value">
            <summary>
            Returns the string parsed attribute value of this attribute.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.IsNull">
            <summary>
            Determines whether this attribute has a value or not. This allows us to distinguish between attributes defining the empty string
            and attributes defining a null value (which could be interpreted as deletion during a merge). 
            </summary>
            <returns>
              <code>true</code> if this attribute has no value; otherwise, <code>false</code>.
            </returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.GetRawValue(System.Type)">
            <summary>
            Returns the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.RawValue"/> if not null. Otherwise parses the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.Value"/> using the specified 
            <code>type</code> and returns that value.
            </summary>
            <param name="type">The data type to use for parsing the value.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/>-method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition">
            <summary>
            Defines an entity's attribute.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.#ctor(System.UInt16,System.String,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType,System.UInt16,System.Boolean)">
            <summary>
            Constructor.
            </summary>
            <param name="key">The unique key for this attribute</param>
            <param name="description">The attribute description</param>
            <param name="type">The datatype of this attribute</param>
            <param name="length">The length of a string attribute (only valid if <code>type</code> is <code>AttributeType.AlphaNumeric</code></param>
            <param name="queryEfficient"><code>true</code> if this attribute is efficient for filtering operations</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.Type">
            <summary>
            Gets or sets the data type of this attribute definition.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.Length">
            <summary>
            Gets or sets the length of this attribute definition (if the definitions data type is <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType.AlphaNumeric"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.LengthSpecified">
            <summary>
            Determines whether the property <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeDefinition.Length"/> has a value (used by the XmlSerializer infrastructure).
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector">
            <summary>
            Holds information about the attributes which should be returned on a search operation.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection)">
            <summary>
            Constructor. Initializes a new attribute selector for a specific <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AllAttributeSelection"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.#ctor(System.UInt16[])">
            <summary>
            Constructor. Initializes a new attribute selector for a specific set of attributes <code>attributes</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.Attributes">
            <summary>
            Gets or sets the list of attributes that should be fetched.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.AllAttributes">
            <summary>
            Gets or sets a value that determines whether to fetch all, no or just the query efficient attributes.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector.AllAttributesSpecified">
            <summary>
            Used for infrastructure reasons only.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType">
            <summary>
            Holds attributes' possible data types.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType.AlphaNumeric">
            <summary>
            A string value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType.Integer">
            <summary>
            Represents singned numbers which don't have any fractional digits in its lexical or value spaces.
            Legal examples are: <code>12, -38</code> 
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType.Float">
            <summary>
            Represents IEEE simple (32 bits) and double (64 bits) precision floating-point types.
            Legal examples are: <code>-5E2, 1.35, 5.6e-2</code>.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeType.DateTime">
            <summary>
            Describes combination of a date and a time. Its lexical space is the extended format 
            "CCYY-MM-DDThh:mm:ssZ".  The letter "T" is the date/time separator.
            The timezone is specified as "Z" (UTC).
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog">
            <summary>
            This class represents a concrete catalog with a description of possible catalog attributes (<see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog.ValidAttributes"/>) for each entry (i.e. the colums of a catalog) and
            the catalog entries (<see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog.CatalogEntries"/>).
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog.Item(System.Int16)">
            <summary>
            Returns the catalog entry with index <code>key</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog.ValidAttributes">
            <summary>
            Gets or sets a list of possible catalog entry attribute (i.e. columns of a catalog).
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog.CatalogEntries">
            <summary>
            Gets or sets the list of catalog entries that belong to this catalog.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogAttributeDefinition">
            <summary>
            Defines an entity's attribute which is based on a <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogAttributeDefinition.Catalog"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogAttributeDefinition.Catalog">
            <summary>
            Gets or sets the uuid of the catalog this attribute definition points to.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection">
            <summary>
            Special class that holds a list of <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.#ctor(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.Count">
            <summary>
            Returns the number of catalogs in this list.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.Item(System.Guid)">
            <summary>
            Returns the catalog with uuid <code>catalogUuid</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.Item(System.Guid,System.Int16)">
            <summary>
            Returns the catalog entry with index <code>catalogEntryIndex</code> from catalog with uuid <code>catalogUuid</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.Item(System.Guid,System.String)">
            <summary>
            Returns the catalog entry with index <code>catalogEntryIndex</code> from catalog with uuid <code>catalogUuid</code>.
            </summary>
            <remarks>
            The index <code>catalogEntryIndex</code> has to be a valid short.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection.GetEnumerator">
            <summary>
            Returns an enumerator for enumerating all catalogs in this collection.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry">
            <summary>
            Holds information of a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>'s entry
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.Attributes">
            <summary>
            Gets or sets the attributes that belong to this catalog entry.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.Key">
            <summary>
            Gets or sets the unique key of this catalog entry.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.ToString(System.IFormatProvider)">
            <summary>
            Returns a string representation of this entry using the format provider
            <code>provider</code>.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration">
            <summary>
            Holds the configuration of the entire database and defines the possible attribute definitions of all entities.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.AllAttributes">
            <summary>
            Returns a list of all attribute definitions in this configuration.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.PartAttributes">
            <summary>
            Gets or sets a list of all part attribute definitions.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.CharacteristicAttributes">
            <summary>
            Gets or sets a list of all characteristic attribute definitions.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.MeasurementAttributes">
            <summary>
            Gets or sets a list of all measurement attribute definitions.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.ValueAttributes">
            <summary>
            Gets or sets a list of all value attribute definitions.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.CatalogAttributes">
            <summary>
            Gets or sets a list of all catalog attribute definitions.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.VersioningType">
            <summary>
            The attribute <code>versioningType</code> defines, whether updates to parts or characteristics
            overwrite existing values, or whether they create a new version of the entity.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetName(System.UInt16)">
             <summary>
            Returns the name of the attribute definition specified by <code>key</code>.
             </summary>
             <param name="key">The key of the attribute definition.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetDefinition(System.UInt16)">
            <summary>
            Returns the attribute definition with <code>key</code>.
            </summary>
            <param name="key">The key of the attribute definition.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity)">
            <summary>
            Returns all attribute definitions for entity type <code>entityType</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetDefinition(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,System.UInt16)">
            <summary>
            Returns the attribute definition with <code>key</code> for entity type <code>entity</code>.
            </summary>
            <param name="key">The key of the attribute definition.</param>
            <param name="type">The entity type for which the definition should be returned.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.IsKeyOfType(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,System.UInt16)">
            <summary>
            Returns <code>true</code> if the attribute definition with key <code>key</code> belongs to an entity 
            with type <code>entityType</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetTypeForKey(System.UInt16)">
            <summary>
            Return the entity type <code>entityType</code> of the attribute definition with <code>key</code>. If the key 
            does not exist in this configuration, <code>null</code> is returned.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.GetFormattedValue(System.UInt16,System.String,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection,System.IFormatProvider)">
            <summary>
            Returns a formatted value for the attribute <paramref name="value"/>. If the value is a catalog entry, the catalog value will
            be returned. This method uses the <paramref name="provider"/> for formatting the value. If the <paramref name="provider"/> 
            is not specified, the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture"/> is used to format the resulting value.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration.ParseValue(System.UInt16,System.String,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogCollection)">
            <summary>
            Returns the value represented by <paramref name="attributeValue"/>. <paramref name="attributeValue"/> musst be the language neutral database entry of an attribute.
            I.e. if an attribute represents a catatalogue entry, the catalog entry is returned. If an attribute represents a normal value
            of type string, int, double or DateTime the value is returned with that type.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataCharacteristic">
            <summary>
            This class represents a measurement value together with information about the characteristic this value belongs to.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataCharacteristic.Value">
            <summary>
            Gets or sets the measurement value. Please note that a measurement value can include additional 
            information when measurement value attributes are defined.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement">
            <summary>
            This is the concrete class of a measurement that contains measurement values as well.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement.Characteristics">
            <summary>
            Gets or sets the measurement values.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceFeatureMatrix">
            <summary>
            Provides the minimum server version for several features.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue">
            <summary>
            This class represents a single measurement value that belongs to one characteristic and one measurement.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue.#ctor(System.Nullable{System.Double})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.Attribute[])">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue.Attributes">
            <summary>
            Gets or sets the attributes that belong to the measurement value. By default, every measurement 
            value has the attribute with key <code>1</code> which is the measurent value as a double value.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataValue.MeasuredValue">
            <summary>
            Convinience property for accessing the measurement value (K1).
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity">
            <summary>
            Enumeration of possible entities.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity.Part">
            <summary>
            The entity is a part.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity.Characteristic">
            <summary>
            The entity is a characteristic.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity.Value">
            <summary>
            The entity is a measurement value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity.Measurement">
            <summary>
            The entity is a measurement.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity.Catalog">
            <summary>
            The entity is a catalog.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldDefinitions">
            <summary>
            Central location where field definitions are defined.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldDefinitions.Measurement">
            <summary>
            Gets the field definitions for measurements.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldDefinitions.Value">
            <summary>
            Gets the field definitions for values.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldDefinitions.GetAvailableDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity)">
            <summary>
            Gets the field definitions.
            </summary>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldType">
            <summary>
            These are the possible data types of attributes.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldType.AlphaNumeric">
            <summary>
            AlphaNumeric represents a string value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldType.Integer">
            <summary>
            Integer is a signed 32-bit type.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldType.Float">
            <summary>
            Float corresponds to the IEEE single-precision 32-bit floating point type. The following
            xamples are legal literals for Float: <code>-1E4, 1267.43233E12, 12.78e-2, 12</code>.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.FieldType.DateTime">
            <summary>
            DateTime represents a specific instant of time. The lexical representation has to be 
            in the format "CCYY-MM-DDThh:mm:ss". The letter "T" is the date/time separator. "ss" may
            contain fractional seconds (like "ss.ssss...") to increase the precision.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition">
            <summary>
            Klasse zum Parsen einer Filterzeichenkette für Messdaten.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchAnd.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchAnd.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition[])">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClient">
            <summary>
            Client interface for communicating with the REST based data service.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.PartUuids">
            <summary>
            Gets or sets the list of part uuids that should be usded to restrict the measurement search.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.Deep">
            <summary>
            Gets or sets a flag if the search should only be performed for the specified part (<code>false</code>) or 
            if the part and child parts (<code>true</code>) should be searched.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.LimitResult">
            <summary>
            Gets or sets the maximum number of measurements that should be returned. If this value is -1, no limit is used.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.OrderBy">
            <summary>
            Gets or sets the sort order of the resulting measurements.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.SearchCondition">
            <summary>
            Gets or sets the search condition that should be used.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.MeasurementUuids">
            <summary>
            Gets or sets the list of measurement uuids that should be returned.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.AggregationMeasurements">
            <summary>
            Specifies what types of measurements will be returned (normal/aggregated measurements or both). 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.FromModificationDate">
            <summary>
            Specifies a date to select all measurements that where modified after that date. Please note that the system modification date 
            (<see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.LastModified"/>) is used and not the time attribute (<see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Time"/>).
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.ToModificationDate">
            <summary>
            Specifies a date to select all measurements that where modified before that date. Please note that the system modification date 
            (<see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.LastModified"/>) is used and not the time attribute (<see cref="F:Zeiss.IMT.PiWeb.Api.Common.Data.WellKnownKeys.Measurement.Time"/>).
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.IsUnrestricted">
            <summary>
            Specifies whether this filter will return all measurements of a part or a database (depending whether 
            a part path is specified when fetching data).
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractMeasurementFilterAttributes.ToString">
            <summary>
            Overriden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetServiceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation"/>. This method can be used for connection checking. The call returns quickly 
            and does not produce any noticeable server load. 
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetInterfaceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Data.InterfaceVersionRange"/>.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetConfiguration(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration"/>. The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration"/> contains the 
            attribute definitions for parts, characteristics, measurements and values etc.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition[],System.Threading.CancellationToken)">
            <summary>
            Adds new attribute definitions to the database configuration for the specified <paramref name="entity"/>.
            </summary>
            <param name="entity">The entity the attribute definitions should be added to.</param>
            <param name="definitions">The attribute definitions to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition[],System.Threading.CancellationToken)">
            <summary> 
            Updates / replaces the attribute definitions for the specified <paramref name="entity"/>. If the definition
            does not exist yet, it will be replaced otherwise it will be updated.
            </summary>
            <param name="entity">The entity the attribute definitions should be replaced for.</param>
            <param name="definitions">The attribute definitions to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,System.UInt16[],System.Threading.CancellationToken)">
            <summary>
            Deletes the attribute definitions from the database configuration for the specified <paramref name="entity"/>. If the key
            list is empty, all definitions for the entity are deleted.
            </summary>
            <param name="entity">The entity the attribute definitions should be deleted from.</param>
            <param name="keys">The keys that specify the definitions.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteAllAttributeDefinitions(System.Threading.CancellationToken)">
            <summary>
            Deletes all attribute definitions from the database configuration.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CheckAttributeUsage(System.UInt16,System.String,System.Threading.CancellationToken)">
            <summary>
            Method checks if there is any entry for attribute <paramref name="attributeKey"/> with value <paramref name="value
            "/>
            </summary>
            <param name="attributeKey">The attribute key which should be checked.</param>
            <param name="value">The value which schould be checked.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CheckCatalogEntryUsage(System.UInt16,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Method checks if there is any entry for attribute <paramref name="attributeKey"/> and catalog entry with index <paramref name="catalogEntryIndex"/>
            </summary>
            <param name="attributeKey">The attribute key which should be checked.</param>
            <param name="catalogEntryIndex">The index of the catalog entry which should be checked.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetAllCatalogs(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching all <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>s.  The catalogs contain the definition and the catalog entries.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetCatalog(System.Guid,System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>.  The catalogs contain the definition and the catalog entries.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to be rteurned.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateCatalogs(Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog[],System.Threading.CancellationToken)">
            <summary>
            Adds the specified catalogs to the database. If the catalog contains entries, the entries will be added too.
            </summary>
            <param name="catalogs">The catalogs to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateCatalogs(Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog[],System.Threading.CancellationToken)">
            <summary> 
            Updates the specified catalogs. If the catalog contains entries, the entries will be updated too.
            </summary>
            <param name="catalogs">The catalogs to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteCatalogs(System.Guid[],System.Threading.CancellationToken)">
            <summary> 
            Deletes the specified catalogs including their entries from the database. If the parameter <paramref name="catalogUuids"/>
            is empty, all catalogs will be deleted.
            </summary>
            <param name="catalogUuids">The catalog uuids to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateCatalogEntries(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry[],System.Threading.CancellationToken)">
            <summary>
            Adds the specified catalog entries to the catalog with uuid <paramref name="catalogUuid"/>. If the key <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.Key"/>
            is <code>-1</code>, the server will generate a new unique key for that entry.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to add the entries to.</param>
            <param name="entries">The catalog entries to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteCatalogEntries(System.Guid,System.Int16[],System.Threading.CancellationToken)">
            <summary> 
            Removes the catalog entries with the specified <paramref name="keys"/> from the catalog <paramref name="catalogUuid"/>. If the list of keys
            is empty, all catalog entries will be removed.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to remove the entries from.</param>
            <param name="keys">The keys of the catalog entries to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Guid[],System.Nullable{System.UInt16},Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of parts below <paramref name="partPath"/>. The result list always contains the specified parent part too. If the parent part
            is <code>null</code>, a server wide search is performed. If the <see paramref="depth"/> is <code>0</code>, only the specified part will be returned.
            </summary>
            <param name="partPath">The parent part to fetch the children for.</param> 
            <param name="withHistory">Determines whether to return the version history for each part.</param>
            <param name="depth">The depth for the inspection plan search.</param>
            <param name="partUuids">The list of part uuids to restrict the search to.</param>
            <param name="requestedPartAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetPartByUuid(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a single part by its uuid.
            </summary>
            <param name="partUuid">The part's uuid</param>
            <param name="withHistory">Determines whether to return the version history for the part.</param>
            <param name="requestedPartAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Adds the specified parts to the database.
            </summary>
            <param name="parts">The parts to add.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry. </param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the specified parts in the database.
            </summary>
            <param name="parts">The parts to update.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry. </param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Threading.CancellationToken)">
            <summary> 
            Deletes all parts and child parts below <paramref name="partPath"/> from the database. Since parts act as the parent 
            of characteristics and measurements, this call will delete all characteristics and measurements including the measurement 
            values that are a child of the specified parent part.
            </summary>
            <param name="partPath">The parent part for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteParts(System.Guid[],System.Threading.CancellationToken)">
            <summary> 
            Deletes all parts and child parts below the parts specified by <paramref name="partUuids"/> from the database. Since parts act as the parent 
            of characteristics and measurements, this call will delete all characteristics and measurements including the measurement 
            values that are a child of the specified parent part.
            </summary>
            <param name="partUuids">The uuid list of the parent part for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Nullable{System.UInt16},Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of characteristics below <paramref name="partPath"/>. Parts below <paramref name="partPath"/> are ignored.
            If the parent part is <code>null</code> the characteristics below the root part will be returned.
            The search can be restricted using the various filter parameters.
            If the <see paramref="depth"/> is <code>0</code>, an empty list will be returned.
            </summary>
            <param name="partPath">The parent part to fetch the children for.</param>
            <param name="withHistory">Determines whether to return the version history for each characteristic.</param>
            <param name="depth">The depth for the inspection plan search.</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetCharacteristicsByUuids(System.Guid[],Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches characteristics based on their <paramref name="charUuids"/>.
            </summary>
            <param name="charUuids">Uuids of the cherectersitics to be fetched</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="withHistory">Determines whether to return the version history for each characteristic.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetCharacteristicByUuid(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a single characteristic by its uuid.
            </summary>
            <param name="charUuid">The characteristic's uuid</param>
            <param name="withHistory">Determines whether to return the version history for the characteristic.</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Adds the specified characteristics to the database.
            </summary>
            <param name="characteristics">The characteristics to add.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the specified characteristics in the database.
            </summary>
            <param name="characteristics">characteristics parts to update.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Threading.CancellationToken)">
            <summary> 
            Deletes the characteristic <paramref name="charPath"/> and its sub characteristics from the database. 
            </summary>
            <param name="charPath">The characteristic path for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteCharacteristics(System.Guid[],System.Threading.CancellationToken)">
            <summary>
            Deletes the characteristics <paramref name="charUuid"/> and their sub characteristics from the database. 
            </summary>
            <param name="charUuid">The characteristic uuid list for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurements for the <paramref name="partPath"/>. The search operation can be parameterized using the specified 
            <paramref name="filter"/>. If the filter is empty, all measurements for the specified part will be fetched.
            </summary>
            <param name="partPath">The part path to fetch the measurements for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetDistinctMeasurementAttributeValues(System.UInt16,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurement attribute values of the attribute <paramref name="key" /> for the <paramref name="partPath" />. The search operation can be parameterized using the specified
            <paramref name="filter" />. If the filter is empty, all values for the specified key will be fetched.
            </summary>
            <param name="key">The key for which to fetch distinct attribute values.</param>
            <param name="partPath">The part path to fetch the measurements for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Adds the measurements parts to the database.
            </summary>
            <param name="measurements">The measurements to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Updates the specified measurements in the database.
            </summary>
            <param name="measurements">The measurements to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteMeasurementsByPartPath(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition,Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementDeleteBehavior,System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements including the measurement values for part <paramref name="partPath"/>. The <paramref name="filter"/> can be used 
            to restrict the measurements. If the filter is empty, all measurements for the specified part will be deleted. If the partPath is empty,
            all measurements from the whole database will be deleted.
            </summary>
            <param name="partPath">The part path to delete the measurements from.</param>
            <param name="filter">A filter to restrict the delete operation.</param>
            <param name="aggregation">Specifies what types of measurements will be deleted (normal/aggregated measurements or both).</param>
            <param name="deep">Specifies if measurements of <paramref name="partPath"/> only or also measurements of sub parts will be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteMeasurementsByPartUuids(System.Guid[],Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition,Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection,System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements including the measurement values for parts that uuids are within <paramref name="partUuids"/> list. The <paramref name="filter"/> can be used 
            to restrict the measurements. If the filter is empty, all measurements for the specified parts will be deleted. If the partPath is empty,
            all measurements from the whole database will be deleted. 
            </summary>
            <param name="partUuids">The Uuids of the parts which measurements should be deleted.</param>
            <param name="filter">A filter to restrict the delete operation.</param>
            <param name="aggregation">Specifies what types of measurements will be deleted (normal/aggregated measurements or both).</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.DeleteMeasurementsByUuid(System.Guid[],System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements that are part of the <paramref name="measurementUuids"/> list.
            </summary>
            <param name="measurementUuids">The list of uuids of the measurements to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.GetMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurements and measurement values for the <paramref name="partPath"/>. The search operation 
            can be parameterized using the specified <paramref name="filter"/>. If the filter is empty, all measurements for 
            the specified part will be fetched.
            <remarks>The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataCharacteristic"/> objects within the returned measurements does not include the characteristics' paths due to perform issues.</remarks>
            </summary>
            <param name="partPath">The part path to fetch the measurements and values for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.CreateMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Adds the measurements and measurement values parts to the database. Please note that no single values can be inserted or updated. Whole
            measurements with all values can be created or updated only.
            </summary>
            <param name="values">The measurements and values to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase`1.UpdateMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Updates the measurements and measurement values parts to the database. Please note that no single values can be inserted or updated. Whole
            measurements with all values can be created or updated only.
            </summary>
            <param name="values">The measurements and values to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClientExtensions">
            <summary>
            Client class for communicating with the REST based data service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClientExtensions.CreateAttributeDefinition``1(Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase{``0},Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition,System.Threading.CancellationToken)">
            <summary>
            Adds a new attribute definition to the database configuration for the specified <paramref name="entity"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="entity">The entity the attribute definition should be added to.</param>
            <param name="definition">The attribute definition to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClientExtensions.CreateCatalogEntry``1(Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase{``0},System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry,System.Threading.CancellationToken)">
            <summary> 
            Adds the specified catalog entry to the catalog with uuid <paramref name="catalogUuid"/>. If the key <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.Key"/>
            is <code>-1</code>, the server will generate a new unique key for that entry.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="catalogUuid">The uuid of the catalog to add the entry to.</param>
            <param name="entry">The catalog entry to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClientExtensions.DeleteCatalogEntry``1(Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase{``0},System.Guid,System.Int16,System.Threading.CancellationToken)">
            <summary> 
            Removes the catalog entry with the specified <paramref name="key"/> from the catalog <paramref name="catalogUuid"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="catalogUuid">The uuid of the catalog to remove the entry from.</param>
            <param name="key">The key of the catalog entry to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClientExtensions.DeleteAllParts``1(Zeiss.IMT.PiWeb.Api.DataService.Rest.IDataServiceRestClientBase{``0},System.Threading.CancellationToken)">
            <summary> 
            Deletes all parts from the database. Since parts act as the parent of characteristics and measurements, this call will 
            delete all characteristics and measurements including the measurement values too.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes">
            <summary>
            Class that encapsulates the url parameter for a measurement value search via PiWeb-REST web service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes.Parse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Parses the filter and returns a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes"/> object that represents the filter values.
            If the parse operation was not successful, an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </summary>
            <returns>The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes"/> with the parsed information.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes.ToParameterDefinition">
            <summary>
            Creates a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition"/> list that represents this filter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes.Clone">
            <summary>
            Creates a clone of this filter.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementMergeCondition">
            <summary>
            Die Enumeration definiert die Bedingung, die im Rahmen einer Messungssuche
            beim Koppeln von Messungen verschiedener Teile anhand eines primären Messungsschlüssels
            für jeden im Suchergebnis enthaltenen Attributwert des Schlüssels erfüllt sein muss.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementMergeCondition.None">
            <summary>
            Es ist egal, in wievielen der durchsuchten Teile
            Messungen mit dem gleichen Attributwert des primären Messungsschlüssels vorkommen.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementMergeCondition.MeasurementsInAtLeastTwoParts">
            <summary>
            In mindestens 2 Teilen müssen Messungen mit dem gleichen Attributwert des primären Messungsschlüssels vorkommen.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementMergeCondition.MeasurementsInAllParts">
            <summary>
            In allen Teilen müssen Messungen mit dem gleichen Attributwert des primären Messungsschlüssels vorkommen.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation">
            <remarks/>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.ID">
            <summary>
            Gets or sets the id of this version entry.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.Comment">
            <summary>
            Gets or sets the versioning comment.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.User">
            <summary>
            Gets or sets the comment of this inspection plan entity.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.ChangeCount">
            <summary>
            Gets or sets the number of changed inspection plan items that where change.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.DateCreated">
            <summary>
            Contains the date and time of the versioning change.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningInformation.ToString">
            <summary>
            Overriden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase">
            <summary>
            This is the base class for inspection plan entities (i.e. parts and characteristics). Each inspection plan entity is identified by an <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Uuid"/> 
            (constants, even when renamed) and a unique <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Path"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Item(System.UInt16)">
            <summary>
            Indexer for accessing the attribute value with the specified <code>key</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Attributes">
            <summary>
            Gets or sets the attributes of this inspection plan entity.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Uuid">
            <summary>
            Gets or sets the uuid of this inspection plan entity. The uuid is always constant, even if 
            this entity is renamed.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Comment">
            <summary>
            Gets or sets the comment of this inspection plan entity.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Path">
            <summary>
            Gets or sets the path of this inspection plan entity.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Version">
            <summary>
            This is the version number of this entity. The version number is using a global versioning scheme accross all 
            version changes of the whole inspection plan. This means, that single instances of a part or characteristic can 
            have non consecutive version numbers.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.Timestamp">
            <summary>
            Contains the date and time of the last change applied to this instance.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanBase.ToString">
            <summary>
            Overriden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic">
            <summary>
            This class represents an inspection plan characteristics with its attributes and the version history.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic[])">
            <summary>
            This constructor is required for the JSON deserializer to be able
            to identify concrete classes to use when deserializing <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic.History"/> property.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic.#ctor">
            <summary>
            Default-Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic.History">
            <summary>
            Gets or sets the version history for this inspection plan characteristics. This property will be populated only 
            when the inspection plan search is performed with the versioning flag set. When creating new parts,
            this information will be ignored by the server.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity">
            <summary>
            Enumeration of possible inspection plan entities.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity.Part">
            <summary>
            The entity is a part.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity.Characteristic">
            <summary>
            The entity is a characteristic.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart">
            <summary>
            This class represents an inspection plan part with its attributes and the version history.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart[])">
            <summary>
            This constructor is required for the JSON deserializer to be able
            to identify concrete classes to use when deserializing <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart.History"/> property.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart.History">
            <summary>
            Gets or sets the version history for this inspection plan part. This property will be populated only 
            when the inspection plan search is performed with the versioning flag set. When creating new parts,
            this information will be ignored by the server.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation">
            <summary>
            This enumeration specifies the available search operations for measurement searches.
            When searching with a list of values using <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.In"/> and <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.NotIn"/> the following rules apply:
            * List values are separated by a comma, i.e. "abc,def"
            * Whitespaces at the beginning and end of a values list are ignored, i.e. "  abc,def  " is the same as "abc,def"
            * When a value inside the values list should contain a comma, the entry has to be quoted, i.e. "'value,with,two commas', othervalue"
            * Dates have to be specified in ISO-8601 format 
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.Equal">
            <summary>
            Specifies an operation that checks if two values are equal.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.NotEqual">
            <summary>
            Specifies an operation that checks if two values are not equal.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.GreaterThan">
            <summary>
            Specifies an operation that checks if one value is greater than another value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.LessThan">
            <summary>
            Specifies an operation that checks if one value is less than another value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.GreaterThanOrEqual">
            <summary>
            Specifies an operation that checks if one value is greater than or equal to another value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.LessThanOrEqual">
            <summary>
            Specifies an operation that checks if one value is less than or equal to another value.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.In">
            <summary>
            Specifies an operation that checks if one value is inside a value list.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.NotIn">
            <summary>
            Specifies an operation that checks if one value is not inside a value list.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.Operation.Like">
            <summary>
            Specifies an operation that checks if two values are equal. Placeholder "%" (arbitrary string) and "_" (single character) are allowed.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order">
            <summary>
            This class is used for specifying the sort order of measurements.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.#ctor(System.UInt16,Zeiss.IMT.PiWeb.Api.DataService.Rest.OrderDirection,Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity)">
            <summary>
            Constructor.
            </summary>
            <param name="attribute">The key of the attribute that is used for sorting</param>
            <param name="direction">The sort direction</param>
            <param name="entity">The entity that is used for sorting</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.Entity">
            <summary>
            Gets or sets the entity that is used for sorting.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.Attribute">
            <summary>
            Gets or sets the key of the attribute that is used for sorting.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.Direction">
            <summary>
            Gets or sets the sort direction.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.Order.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.OrderDirection">
            <summary>
            This enumeration specifies the order direction when searching for measurement .
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.OrderDirection.Asc">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.OrderDirection.Desc">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement">
            <summary>
            This class represents a single part of an inspection plan path. A path part has a <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Value"/> and can either specify a characteristic or a part (<see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Type"/>).
            Notice that comparision of path elements is case insensitiv per default.
            </summary>
            <remarks>This class is immutable!</remarks>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.EmptyPart">
            <summary>
            Constant value for an empty part.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.EmptyCharacteristic">
            <summary>
            Constant value for an empty characteristic.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity,System.String)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Type">
            <summary>
            Gibt den Type des Pfadabschnittes zurück.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Value">
            <summary>
            Gibt den Namen zurück.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.IsEmpty">
            <summary>
            Gibt an, ob diese <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement"/>-Instanz leer ist.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Part(System.String)">
            <summary>
            Creates a new path element with type <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity.Part"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Char(System.String)">
            <summary>
            Creates a new path element with type <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanEntity.Characteristic"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.op_Equality(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement)">
            <summary>
            Equality operator. Path element are compared case insensitive.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.op_Inequality(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement)">
            <summary>
            Inequality operator. Path element are compared case insensitive.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.Equals(System.Object)">
            <summary>
            Overridden <see cref="M:System.Object.Equals(System.Object)"/> method. Path element are compared case insensitive.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.GetHashCode">
            <summary>
            Overrridden <see cref="M:System.Object.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement.ToString">
            <summary>
            Overrridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation">
            <summary>
            Every inspection plan entity is uniquely identified by a path. The path contains a typed list of path elements (<see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement"/>).
            This list of path elements describes a hierarchy with the top most path element as the first element in that list and the deepest path element
            as the last element in that list. Please note that a path has the following rules:
            * The path elements are compared ignoring the case
            * A part path element can have part path and characteristic path elements as children
            * A characteristic path element can have other characteristic elements as children
            * A characteristic path element can not have part elements as children
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Root">
            <summary> Returns the root path. </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.#ctor(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement})">
            <summary>Constructor. Initialies the path with the given <paramref name="paths"/>.</summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.#ctor(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement[])">
            <summary>Constructor. Initialies the path with the given <paramref name="paths"/>.</summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Item(System.Int32)">
            <summary>
            Indexer to access the path elements by its index.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ParentPath">
            <summary>
            Returns the parent path.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ParentPartPath">
            <summary>
            Returns the parent part path.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.RootPartPath">
            <summary> 
            Returns the root part of ths path.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.IsRoot">
            <summary> 
            Returns true if this path is the root part. 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Count">
            <summary> 
            Returns the number of path elements. 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Name">
            <summary> 
            Returns the name part of the path. 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.TypedName">
            <summary> 
            Returns the typed name of the path - a path element. As the root part does not have a name <code>null</code> is returned. 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Type">
            <summary> 
            Returns the type of the last path element. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.IsNullOrRoot(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary> Checks if the <paramref name="path"/> is <code>null</code> or the root part. </summary>
            <returns>True, if the <paramref name="path"/> is <code>null</code> or the root part otherwise false.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.IsBelow(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary> Checks if this path is below <paramref name="path"/> or is equal to <paramref name="path"/>.
            Also checks the path elements type!
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Parent(System.Int32)">
            <summary> 
            Returns the parent path by stepping up the <code>upcount</code> number of levels in the path hierarchy.
            </summary>
            <param name="upcount">Number of levels to go upwards the path hierarchy (&gt;= 0).</param>
            <returns>The path without the last n levels, the path itself or the root path.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.op_Addition(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary>
            Add operator. Combines the path <paramref name="p1"/> and the path <paramref name="p2"/> to a new <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> instance.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.op_Addition(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement)">
            <summary>
            Add operator. Combines the path <paramref name="p1"/> and the path <paramref name="p2"/> to a new <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> instance.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Combine(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary> 
            Combines the path <paramref name="p1"/> and the path <paramref name="p2"/> to a new <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> instance. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Combine(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement)">
            <summary>
            Combines the path <paramref name="path"/> and the path element <paramref name="elem"/> to a new <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> instance. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.SubPath(System.Int32,System.Int32)">
            <summary>
            Retrieves a subpath from this instance. The subpath starts at a specified path element index and has a specified count of path elements.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.SubPath(System.Int32)">
            <summary>
            Retrieves a subpath from this instance. The subpath starts at a specified path element index and continues to the last path element.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.StartPath(System.Int32)">
            <summary>
            Retrieves a subpath from this instance that contains the first <code>count</code> number of path elements from this path.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.op_Equality(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary> 
            Equality operator. Comparison of path elements is case insensitive.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.op_Inequality(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation)">
            <summary> 
            Inequality operator. Comparison of path elements is case insensitive!.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.Equals(System.Object)">
            <summary> 
            Overridden <see cref="M:System.Object.Equals(System.Object)"/> method. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.GetHashCode">
            <summary> 
            Overridden <see cref="M:System.Object.GetHashCode"/> method. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            Returns a string representation of this PathInformation object to be used for display only.
            The path string will contain at least a leading delimiter for the root part.
            (Attention: The string cannot be converted back into a PathInformation object!)
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ToStringWithoutRoot">
            <summary>
            Returns a string representation of this PathInformation object to be used for display only.
            It will not contain a leading delimiter for the root part making it look 'relative'.
            The result for the root part will be an empty string.
            (Attention: The string cannot be converted back into a PathInformation object!)
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ToString(System.Boolean)">
            <summary>
            Returns a string representation of this PathInformation object to be used for display only.
            The parameter <paramref name="withRoot"/> defines whether
            the path string contains the leading delimiter string for the root part.
            (Attention: The string cannot be converted back into a PathInformation object!)
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.GetEnumerator">
            <summary>
            Returns an enumerator which contains all <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathElement"/> objects which this <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation"/> consists of. 
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation.ToString(System.String,System.IFormatProvider)">
            <summary>
            Creates a string with the following formatting types:
            * "S", "Name": Returns just the name (last path component) of the path.
            * "Full": Returns the name and the full path in brackets.
            * No or unknown format: Returns the whole path.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient">
            <summary>
            Client class for communicating with the REST based data service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.#ctor(System.Uri,Zeiss.IMT.PiWeb.Api.Common.Client.ILoginRequestHandler,System.Int32)">
            <summary>
            Main Constructor. Initilization of the client class for communicating with the DataService via the given <paramref name="serverUri"/>
            </summary>
            <param name="serverUri">The PiWeb Server uri, including port and instance</param>
            <param name="loginRequestHandler"></param>
            <param name="maxUriLength">The uri length limit</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetServiceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation"/>. This method can be used for connection checking. The call returns quickly 
            and does not produce any noticeable server load. 
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetInterfaceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Data.InterfaceVersionRange"/>.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetConfiguration(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration"/>. The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Configuration"/> contains the 
            attribute definitions for parts, characteristics, measurements and values etc.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition[],System.Threading.CancellationToken)">
            <summary>
            Adds new attribute definitions to the database configuration for the specified <paramref name="entity"/>.
            </summary>
            <param name="entity">The entity the attribute definitions should be added to.</param>
            <param name="definitions">The attribute definitions to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,Zeiss.IMT.PiWeb.Api.DataService.Rest.AbstractAttributeDefinition[],System.Threading.CancellationToken)">
            <summary> 
            Updates / replaces the attribute definitions for the specified <paramref name="entity"/>. If the definition
            does not exist yet, it will be replaced otherwise it will be updated.
            </summary>
            <param name="entity">The entity the attribute definitions should be replaced for.</param>
            <param name="definitions">The attribute definitions to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteAttributeDefinitions(Zeiss.IMT.PiWeb.Api.DataService.Rest.Entity,System.UInt16[],System.Threading.CancellationToken)">
            <summary>
            Deletes the attribute definitions from the database configuration for the specified <paramref name="entity"/>. If the key
            list is empty, all definitions for the entity are deleted.
            </summary>
            <param name="entity">The entity the attribute definitions should be deleted from.</param>
            <param name="keys">The keys that specify the definitions.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteAllAttributeDefinitions(System.Threading.CancellationToken)">
            <summary>
            Deletes all attribute definitions from the database configuration.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CheckAttributeUsage(System.UInt16,System.String,System.Threading.CancellationToken)">
            <summary>
            Method checks if there is any entry for attribute <paramref name="attributeKey"/> with value <paramref name="value
            "/>
            </summary>
            <param name="attributeKey">The attribute key which should be checked.</param>
            <param name="value">The value which schould be checked.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CheckCatalogEntryUsage(System.UInt16,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Method checks if there is any entry for attribute <paramref name="attributeKey"/> and catalog entry with index <paramref name="catalogEntryIndex"/>
            </summary>
            <param name="attributeKey">The attribute key which should be checked.</param>
            <param name="catalogEntryIndex">The index of the catalog entry which should be checked.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetAllCatalogs(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching all <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>s.  The catalogs contain the definition and the catalog entries.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetCatalog(System.Guid,System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>.  The catalogs contain the definition and the catalog entries.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to be rteurned.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateCatalogs(Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog[],System.Threading.CancellationToken)">
            <summary>
            Adds the specified catalogs to the database. If the catalog contains entries, the entries will be added too.
            </summary>
            <param name="catalogs">The catalogs to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateCatalogs(Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog[],System.Threading.CancellationToken)">
            <summary> 
            Updates the specified catalogs. If the catalog contains entries, the entries will be updated too.
            </summary>
            <param name="catalogs">The catalogs to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteCatalogs(System.Guid[],System.Threading.CancellationToken)">
            <summary> 
            Deletes the specified catalogs including their entries from the database. If the parameter <paramref name="catalogUuids"/>
            is empty, all catalogs will be deleted.
            </summary>
            <param name="catalogUuids">The catalog uuids to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateCatalogEntries(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry[],System.Threading.CancellationToken)">
            <summary>
            Adds the specified catalog entries to the catalog with uuid <paramref name="catalogUuid"/>. If the key <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.CatalogEntry.Key"/>
            is <code>-1</code>, the server will generate a new unique key for that entry.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to add the entries to.</param>
            <param name="entries">The catalog entries to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteCatalogEntries(System.Guid,System.Int16[],System.Threading.CancellationToken)">
            <summary> 
            Removes the catalog entries with the specified <paramref name="keys"/> from the catalog <paramref name="catalogUuid"/>. If the list of keys
            is empty, all catalog entries will be removed.
            </summary>
            <param name="catalogUuid">The uuid of the catalog to remove the entries from.</param>
            <param name="keys">The keys of the catalog entries to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Guid[],System.Nullable{System.UInt16},Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of parts below <paramref name="partPath"/>. The result list always contains the specified parent part too. If the parent part
            is <code>null</code>, a server wide search is performed. If the <see paramref="depth"/> is <code>0</code>, only the specified part will be returned.
            </summary>
            <param name="partPath">The parent part to fetch the children for.</param> 
            <param name="withHistory">Determines whether to return the version history for each part.</param>
            <param name="depth">The depth for the inspection plan search.</param>
            <param name="partUuids">The list of part uuids to restrict the search to.</param>
            <param name="requestedPartAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetPartByUuid(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a single part by its uuid.
            </summary>
            <param name="partUuid">The part's uuid</param>
            <param name="withHistory">Determines whether to return the version history for the part.</param>
            <param name="requestedPartAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Adds the specified parts to the database.
            </summary>
            <param name="parts">The parts to add.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry. </param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the specified parts in the database.
            </summary>
            <param name="parts">The parts to update.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry. </param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteParts(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Threading.CancellationToken)">
            <summary> 
            Deletes all parts and child parts below <paramref name="partPath"/> from the database. Since parts act as the parent 
            of characteristics and measurements, this call will delete all characteristics and measurements including the measurement 
            values that are a child of the specified parent part.
            </summary>
            <param name="partPath">The parent part for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteParts(System.Guid[],System.Threading.CancellationToken)">
            <summary> 
            Deletes all parts and child parts below the parts specified by <paramref name="partUuids"/> from the database. Since parts act as the parent 
            of characteristics and measurements, this call will delete all characteristics and measurements including the measurement 
            values that are a child of the specified parent part.
            </summary>
            <param name="partUuids">The uuid list of the parent part for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Nullable{System.UInt16},Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of characteristics below <paramref name="partPath"/>. Parts below <paramref name="partPath"/> are ignored.
            If the parent part is <code>null</code> the characteristics below the root part will be returned.
            The search can be restricted using the various filter parameters.
            If the <see paramref="depth"/> is <code>0</code>, an empty list will be returned.
            </summary>
            <param name="partPath">The parent part to fetch the children for.</param> 
            <param name="withHistory">Determines whether to return the version history for each characteristic.</param>
            <param name="depth">The depth for the inspection plan search.</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetCharacteristicsByUuids(System.Guid[],Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches characteristics based on their <paramref name="charUuids"/>.
            </summary>
            <param name="charUuids">Uuids of the cherectersitics to be fetched</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="withHistory">Determines whether to return the version history for each characteristic.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetCharacteristicByUuid(System.Guid,Zeiss.IMT.PiWeb.Api.DataService.Rest.AttributeSelector,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Fetches a single characteristic by its uuid.
            </summary>
            <param name="charUuid">The characteristic's uuid</param>
            <param name="withHistory">Determines whether to return the version history for the characteristic.</param>
            <param name="requestedCharacteristicAttributes">The attribute selector to determine which attributes to return.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Adds the specified characteristics to the database.
            </summary>
            <param name="characteristics">The characteristics to add.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanCharacteristic[],System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Updates the specified characteristics in the database.
            </summary>
            <param name="characteristics">characteristics parts to update.</param>
            <param name="versioningEnabled">Specifies whether to create a new inspection plan version entry.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteCharacteristics(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,System.Threading.CancellationToken)">
            <summary> 
            Deletes the characteristic <paramref name="charPath"/> and its sub characteristics from the database. 
            </summary>
            <param name="charPath">The characteristic path for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteCharacteristics(System.Guid[],System.Threading.CancellationToken)">
            <summary>
            Deletes the characteristics <paramref name="charUuid"/> and their sub characteristics from the database. 
            </summary>
            <param name="charUuid">The characteristic uuid list for the delete operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurements for the <paramref name="partPath"/>. The search operation can be parameterized using the specified 
            <paramref name="filter"/>. If the filter is empty, all measurements for the specified part will be fetched.
            </summary>
            <param name="partPath">The part path to fetch the measurements for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetDistinctMeasurementAttributeValues(System.UInt16,Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.DistinctMeasurementFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurement attribute values of the attribute <paramref name="key" /> for the <paramref name="partPath" />. The search operation can be parameterized using the specified
            <paramref name="filter" />. If the filter is empty, all values for the specified key will be fetched.
            </summary>
            <param name="key">The key for which to fetch distinct attribute values.</param>
            <param name="partPath">The part path to fetch the measurements for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Adds the measurements parts to the database.
            </summary>
            <param name="measurements">The measurements to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateMeasurements(Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Updates the specified measurements in the database.
            </summary>
            <param name="measurements">The measurements to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteMeasurementsByPartPath(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition,Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementDeleteBehavior,System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements including the measurement values for part <paramref name="partPath"/>. The <paramref name="filter"/> can be used 
            to restrict the measurements. If the filter is empty, all measurements for the specified part will be deleted. If the partPath is empty,
            all measurements from the whole database will be deleted.
            </summary>
            <param name="partPath">The part path to delete the measurements from.</param>
            <param name="filter">A filter to restrict the delete operation.</param>
            <param name="aggregation">Specifies what types of measurements will be deleted (normal/aggregated measurements or both).</param>
            <param name="deep">Specifies if measurements of <paramref name="partPath"/> only or also measurements of sub parts will be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteMeasurementsByPartUuids(System.Guid[],Zeiss.IMT.PiWeb.Api.DataService.Rest.GenericSearchCondition,Zeiss.IMT.PiWeb.Api.DataService.Rest.AggregationMeasurementSelection,System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements including the measurement values for parts that uuids are within <paramref name="partUuids"/> list. The <paramref name="filter"/> can be used 
            to restrict the measurements. If the filter is empty, all measurements for the specified parts will be deleted. If the partPath is empty,
            all measurements from the whole database will be deleted. 
            </summary>
            <param name="partUuids">The Uuids of the parts which measurements should be deleted.</param>
            <param name="filter">A filter to restrict the delete operation.</param>
            <param name="aggregation">Specifies what types of measurements will be deleted (normal/aggregated measurements or both).</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.DeleteMeasurementsByUuid(System.Guid[],System.Threading.CancellationToken)">
            <summary>
            Deletes the measurements that are part of the <paramref name="measurementUuids"/> list.
            </summary>
            <param name="measurementUuids">The list of uuids of the measurements to delete.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.GetMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.PathInformation,Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes,System.Threading.CancellationToken)">
            <summary>
            Fetches a list of measurements and measurement values for the <paramref name="partPath"/>. The search operation 
            can be parameterized using the specified <paramref name="filter"/>. If the filter is empty, all measurements for 
            the specified part will be fetched.
            <remarks>The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataCharacteristic"/> objects within the returned measurements does not include the characteristics' paths due to perform issues.</remarks>
            </summary>
            <param name="partPath">The part path to fetch the measurements and values for.</param>
            <param name="filter">A filter that can be used to further restrict the search operation.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.CreateMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Adds the measurements and measurement values parts to the database. Please note that no single values can be inserted or updated. Whole
            measurements with all values can be created or updated only.
            </summary>
            <param name="values">The measurements and values to add.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataServiceRestClient.UpdateMeasurementValues(Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement[],System.Threading.CancellationToken)">
            <summary>
            Updates the measurements and measurement values parts to the database. Please note that no single values can be inserted or updated. Whole
            measurements with all values can be created or updated only.
            </summary>
            <param name="values">The measurements and values to update.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes">
            <summary>
            Class that encapsulates the url parameter for a measurement value search via PiWeb-REST web service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.RequestedMeasurementAttributes">
            <summary>
            Gets or sets the selector for the measurement attributes.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.Statistics">
            <summary>
            Specifies if statistical information (<see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics"/>: number characteristics OOT, OOT, etc.) should be returned.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.MergeAttributes">
            <summary>
            Specifies the list of primary measurement keys to be used for joining measurements accross multiple parts on the server side.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.MergeCondition">
            <summary>
            Specifies the condition that must be adhered to
            when merging measurements accross multiple parts using a primary key.
            Default value is <code>MeasurementMergeCondition.MeasurementsInAllParts</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.MergeMasterPart">
            <summary>
            Specifies the part to be used as master part
            when merging measurements accross multiple parts using a primary key.
            Default value is <code>null</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.Parse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Parses the filter and returns a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes"/> object that represents the filter values.
            If the parse operation was not successful, an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </summary>
            <returns>The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes"/> with the parsed information.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.ToMeasurementValueFilterAttributes">
            <summary>
            Converts this <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes"/> filter object into an equivalent <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes"/> object.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.Clone">
            <summary>
            Creates a shallow clone of this filter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementFilterAttributes.ToParameterDefinition">
            <summary>
            Creates a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition"/> list that represents this filter.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics">
            <summary>
            Enumeration that specifies what additional statistical information should be returned with each measurement.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics.None">
            <summary>
            No additional statistical information is calculated.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics.Simple">
            <summary>
            Statistical information should be returned. This information includes:
            * Number of characteristics out of tolerance.
            * Number of characteristics out of warning limits.
            * Number of characteristics in warning limits and in tolerance.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics.Detailed">
            <summary>
            Statistical information should be returned. This information includes:
            In addition the the information returned by <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics.Simple"/>,
            the uuids of the characteristics that belong to these groups will be returned.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes">
            <summary>
            Class that encapsulates the url parameter for a measurement search via PiWeb-REST web service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.RequestedValueAttributes">
            <summary>
            Gets or sets the selector for the measurement value attributes.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.RequestedMeasurementAttributes">
            <summary>
            Gets or sets the selector for the measurement attributes.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.CharacteristicsUuidList">
            <summary>
            Gets or sets the list of characteristic uuids that should be returned.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.MergeAttributes">
            <summary>
            Specifies the list of primary measurement keys to be used for joining measurements accross multiple parts on the server side.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.MergeCondition">
            <summary>
            Specifies the condition that must be adhered to
            when merging measurements accross multiple parts using a primary key.
            Default value is <code>MeasurementMergeCondition.MeasurementsInAllParts</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.MergeMasterPart">
            <summary>
            Specifies the part to be used as master part
            when merging measurements accross multiple parts using a primary key.
            Default value is <code>false</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.Parse(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Parses the filter and returns a <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes"/> object that represents the filter values.
            If the parse operation was not successful, an <see cref="T:System.InvalidOperationException"/> will be thrown.
            </summary>
            <returns>The <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes"/> with the parsed information.</returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.Clone">
            <summary>
            Creates a clone of this filter.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementValueFilterAttributes.ToParameterDefinition">
            <summary>
            Creates a <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.ParameterDefinition"/> list that represents this filter.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation">
            <summary>
            This class contains general information about the DataService like the server name, server version etc.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ServerName">
            <summary>
            Gets or sets the server name.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.Version">
            <summary>
            Gets or sets the server version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.SecurityEnabled">
            <summary>
            Gets or sets whether the server has security enabled.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.Edition">
            <summary>
            Gets or sets the servers edition.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.EditionSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.Edition"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.VersionWsdlMajor">
            <summary>
            Gets or sets the web service major interface version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.VersionWsdlMinor">
            <summary>
            Gets or sets the minor web service interface version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.PartCount">
            <summary>
            Gets or sets the number of parts that currently exist in the server. This number is just an approximation.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.CharacteristicCount">
            <summary>
            Gets or sets the number of characteristics that currently exist in the server. This number is just an approximation.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.MeasurementCount">
            <summary>
            Gets or sets the number of measurements that currently exist in the server. This number is just an approximation.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ValueCount">
            <summary>
            Gets or sets the number of values that currently exist in the server. This number is just an approximation.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.FeatureList">
            <summary>
            Gets or sets a list of features that are supported by the server.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.InspectionPlanTimestamp">
            <summary>
            Gets or sets the timestamp of the last inspection plan modification accross the whole server.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.InspectionPlanTimestampSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.InspectionPlanTimestamp"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.StructureTimestamp">
            <summary>
            Gets or sets the timestamp of the last structure modification accross the whole server.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.StructureTimestampSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.StructureTimestamp"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.MeasurementTimestamp">
            <summary>
            Gets or sets the timestamp of the last measurement modification accross the whole server.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.MeasurementTimestampSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.MeasurementTimestamp"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ConfigurationTimestamp">
            <summary>
            Gets or sets the timestamp for the last modification of the server configuration.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ConfigurationTimestampSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ConfigurationTimestamp"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.CatalogTimestamp">
            <summary>
            Gets or sets the timestamp for the last modification of the catalogs.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.CatalogTimestampSpecified">
            <summary>
            Gets or sets of the <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.CatalogTimestamp"/> contains a values.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.WsdlVersion">
            <summary>
            Convenience property that combines <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.VersionWsdlMajor"/> and <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.VersionWsdlMinor"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.ServiceInformation.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog">
            <summary>
            This class represents the base class for cataalogs. The concrete class for catalogs that also contains the catalog entries is <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.Catalog"/>.
            A catalog is identified by an <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.Uuid"/> and a catalog has a <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.Name"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.Uuid">
            <summary>
            Gets or sets the uuid of this catalog.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.Name">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleCatalog.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement">
            <summary>
            This class represents the base class for measurements with its attributes. The concrete class for measurements that also contains the measurement values is <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.DataMeasurement"/>.
            A measurement is identified by an <see cref="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Uuid"/>. A measurement always belongs to one and only one part.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Uuid">
            <summary>
            Gets or sets the uuid of this measurement.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.PartUuid">
            <summary>
            Gets or sets the uuid the part this measurement belongs to.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.LastModified">
            <summary>
            Gets or sets the last modification timestamp of this measurement. The server will update this 
            timestamp whenever an attribute of this measurement is changed or whenever measurement values
            of this measurement are updated, deleted and added.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Created">
            <summary>
            Gets or sets the creation timestamp of this measurement. 
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Attributes">
            <summary>
            Gets or sets all attributes that belong to this measurement.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Status">
            <summary>
            Gets or sets the status information for this measurement. This status information can be requested when 
            performing a measurement search using one of the values from <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.Time">
            <summary>
            Gets or sets the time of this measurement. If this measurement has no time attribute, then <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.MinimumValidDatabaseDateTime"/> will
            be returned.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.TimeOrMinDate">
            <summary>
            Returns the measurement time and in case of no time is specified, the minimum time allowed (<see cref="F:System.Data.SqlTypes.SqlDateTime.MinValue"/>).
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.TimeOrCreationDate">
            <summary>
            Returns the measurement time and in case of no time is specified, the creation date of the measurement.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurement.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurementStatus">
            <summary>
            Status object that has detailed information about the number of characteristics in/out tolerance. This status object can be 
            requested when performing a measurement search using one of the values of <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurementStatus.Id">
            <summary>
            Gets or sets the unique id of the status. Currently this can be one of the following:
            <code>InTol</code>, <code>OutWarn</code> and <code>OutTol</code>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurementStatus.Count">
            <summary>
            Gets or sets the number of characteristics with this measurement status.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimpleMeasurementStatus.Uuid">
            <summary>
            Gets or sets the uuids of the characteristics that have this status. This property will only be populated
            when the detailed status is requested with <see cref="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.MeasurementStatistics.Detailed"/>.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimplePart">
            <summary>
            This class represents the base class for parts inside the inspection plan structure. The concrete class for parts that also contains the part attributes is <see cref="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.InspectionPlanPart"/>.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.DataService.Rest.SimplePart.CharChangeDate">
            <summary>
            Gets or sets the timestamp for characteristic changes. Whenever a characteristic below that part (but not below sub parts) is changed, created or deleted,
            this timestamp will be updated by the server.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningType">
            <summary>
            This enumeration specifies how the server is performing inspection plan versioning.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningType.Off">
            <summary>Versioning is disabled by the server. The client cannot control versioning.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningType.On">
            <summary>Versioning is enabled by the server. The client cannot control versioning.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.DataService.Rest.VersioningType.Client">
            <summary>
            Versioning can be controlled by the client application for each inspection plan update.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.OAuthService.IOAuthServiceRestClient">
            <summary>
            Web service interface to communicate with the REST based PiWeb OAuth service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.OAuthService.IOAuthServiceRestClient.GetOAuthTokenInformation(System.Threading.CancellationToken)">
            <summary>
            Method to query the <see cref="T:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation"/>. 
            <remarks>
            This method can also be used for quick connection check to test if the service is alive. It is 
            quaranteed that this method returns quickly and does perform a lot of work server side.
            </remarks>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.OAuthService.IOAuthServiceRestClient.GetServiceInformation">
            <summary>
            Get information about valid OAuth issues authorities and resource ids.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthServiceRestClient">
            <summary>
            Web service class to communicate with the REST based PiWeb OAuth service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthServiceRestClient.#ctor(System.Uri)">
            <summary>
            Constructor. Instantiates a new <see cref="T:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthServiceRestClient"/> th communicate with the PiWeb-Server OAuthService.
            </summary>
            <param name="serverUri">
            The base url of the PiWeb-Server. Please note that the required "OAuthServiceRest/" will automatically be appended to this url.
            </param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthServiceRestClient.GetServiceInformation">
            <summary>
            Method to query the <see cref="T:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation"/>. 
            <remarks>
            This method can also be used for quick connection check to test if the service is alive. It is 
            quaranteed that this method returns quickly and does perform a lot of work server side.
            </remarks>
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthServiceRestClient.GetOAuthTokenInformation(System.Threading.CancellationToken)">
            <summary>
            Get information about valid OAuth issues authorities and resource ids.
            </summary>
            <param name="cancellationToken">A cancelation token to cancel the web service call.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthTokenInformation">
            <summary>
            This element holds information about valid OAuth token authorities.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.OAuthService.OAuthTokenInformation.OpenIdAuthority">
            <summary>
            The URL of the trusted OpenID Connect authority for this service.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation">
            <summary>
            This element holds general information about the service, like its current version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation.VersionWsdlMajor">
            <summary>
            The major interface version of the service.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation.VersionWsdlMinor">
            <summary>
            The minor interface version of the service.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation.VersionWsdl">
            <summary>
            Convenience property for <see cref="P:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation.VersionWsdlMajor"/> and <see cref="P:Zeiss.IMT.PiWeb.Api.OAuthService.ServiceInformation.VersionWsdlMinor"/>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.NotFilterCondition.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition)">
            <exception cref="T:System.ArgumentNullException"><paramref name="childCondition"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.OrFilterCondition.#ctor(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition})">
            <exception cref="T:System.ArgumentNullException"><paramref name="childConditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition.And(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="conditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition.And(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition})">
            <exception cref="T:System.ArgumentNullException"><paramref name="conditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition.Or(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="conditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition.Or(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition})">
            <exception cref="T:System.ArgumentNullException"><paramref name="conditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition.Not(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition)">
            <exception cref="T:System.ArgumentNullException"><paramref name="condition"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.DateTimeListFilterCondition.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.DateTimeAttributes,Zeiss.IMT.PiWeb.Api.RawDataService.Filter.ListOperation,System.Collections.Generic.IEnumerable{System.Nullable{System.DateTime}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.AndFilterCondition.#ctor(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition})">
            <exception cref="T:System.ArgumentNullException"><paramref name="childConditions"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.IntegerListFilterCondition.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.IntegerAttributes,Zeiss.IMT.PiWeb.Api.RawDataService.Filter.ListOperation,System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.StringListFilterCondition.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Filter.StringAttributes,Zeiss.IMT.PiWeb.Api.RawDataService.Filter.ListOperation,System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.DateTimeConditionGenerator.IsIn(System.Nullable{System.DateTime}[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.DateTimeConditionGenerator.IsIn(System.Collections.Generic.IEnumerable{System.Nullable{System.DateTime}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.DateTimeConditionGenerator.IsNotIn(System.Nullable{System.DateTime}[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.DateTimeConditionGenerator.IsNotIn(System.Collections.Generic.IEnumerable{System.Nullable{System.DateTime}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.IntegerConditionGenerator.IsIn(System.Nullable{System.Int32}[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.IntegerConditionGenerator.IsIn(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.IntegerConditionGenerator.IsNotIn(System.Nullable{System.Int32}[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.IntegerConditionGenerator.IsNotIn(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.StringConditionGenerator.IsIn(System.String[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.StringConditionGenerator.IsIn(System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.StringConditionGenerator.IsNotIn(System.String[])">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Generators.StringConditionGenerator.IsNotIn(System.Collections.Generic.IEnumerable{System.String})">
            <exception cref="T:System.ArgumentNullException"><paramref name="values"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Filter.FilterHelper.MakeComparison(Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.TokenType,System.String,Zeiss.IMT.PiWeb.Api.Common.Data.FilterString.Tree.IFilterTree)">
            <exception cref="T:System.ArgumentNullException"><paramref name="attrName"/> is <see langword="null" />.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.GetServiceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation"/>. This method can be used for connection checking. The call returns quickly 
            and does not produce any noticeable server load. 
            </summary>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.GetInterfaceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Data.InterfaceVersionRange"/>.
            </summary>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.GetFeatureMatrix(System.Threading.CancellationToken)">
            <summary>
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceFeatureMatrix"/>
            </summary>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.ListRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.String[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the <paramref name="entity"/> identified by <paramref name="uuids"/> and filtered by <paramref name="filter"/>.
            Either <paramref name="uuids" /> or <paramref name="filter"/> must have a value.
            </summary>
            <param name="entity">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> the raw data information should be fetched for.</param>
            <param name="uuids">The list of value uuids the data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
            <exception cref="T:System.InvalidOperationException">No uuids and no filter was specified.</exception>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.OperationNotSupportedOnServerException">An attribute filter for raw data is not supported by this server.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.GetRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Int32,System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Fetches raw data as a byte array for the raw data item identified by <paramref name="target"/> and <paramref name="rawDataKey"/>. 
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> that specifies the raw data object that should be fetched.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified target.</param>
            <param name="expectedMd5">The md5 check sum that is expected for the result object. If this value is set, performance is better because server side round trips are reduced.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.GetRawDataThumbnail(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches a preview image for the specified <code>info</code>. 
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> that specifies the raw data object that should be fetched.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified target.</param>
            <returns>The preview image as byte array.</returns>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.CreateRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Byte[],System.Threading.CancellationToken)">
            <summary> 
            Creates a new raw data object <paramref name="data"/> for the element specified by <paramref name="info"/>. 
            </summary>
            <param name="data">The raw data to upload.</param>
            <param name="info">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type and the uuid of the raw data that should be uploaded.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
            <remarks>
            If key speciefied by <see cref="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Key"/> is -1, a new key will be chosen by the server automatically. This is the preferred way.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.UpdateRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Byte[],System.Threading.CancellationToken)">
            <summary> 
            Updates the raw data object <paramref name="data"/> for the element identified by <paramref name="info"/>. 
            </summary>
            <param name="data">The raw data to upload.</param>
            <param name="info">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type, the uuid and the key of the raw data that should be updated.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClientBase`1.DeleteRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes raw data for the element identified by <paramref name="target"/> and <paramref name="rawDataKey"/>.
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type and the uuid of the raw data that should be deleted.</param>
            <param name="rawDataKey">The key of the raw data object which should be deleted.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataListParameters">
            <remarks/>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataListParameters.#ctor">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataListParameters.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity)">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataListParameters.#ctor(System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity})">
            <summary>
            Konstruktor
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions">
            <summary>
            Client class for communicating with the REST based raw data service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="target">The target entity to fetch the raw data information.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Collections.Generic.IEnumerable{Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity},Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of information about the raw data for the <paramref name="entities"/>. 
            </summary>
            <remarks> Use this method to fetch raw data information for several <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> types in one call.</remarks>
            <param name="client">The client class to use.</param>
            <param name="entities">The entities the raw data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawDataForParts(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the parts identified by <paramref name="partUuids"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="partUuids">The list of part uuids the raw data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawDataForCharacteristics(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the characteristic identified by <paramref name="charateristicUuids"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="charateristicUuids">The list of characteristic uuids the raw data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawDataForMeasurements(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the measurements identified by <paramref name="measurementUuids"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="measurementUuids">The list of measurement uuids the raw data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.ListRawDataForValues(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,Zeiss.IMT.PiWeb.Api.Common.Data.ValueRawDataIdentifier[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the measurement values identified by <paramref name="measurementValueUuids"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="measurementValueUuids">The list of value uuids the raw data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.GetRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Threading.CancellationToken)">
            <summary>
            Fetches raw data as a byte array for the raw data item identified by <paramref name="info"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="info">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation"/> that specifies the raw data object that should be fetched.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.GetRawDataForPart(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches raw data for the part with <paramref name="partUuid"/> and raw data index <paramref name="rawDataKey"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="partUuid">The uuid of the part to fetch the raw data object for.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified part.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.GetRawDataForCharacteristic(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches raw data for the characteristic with <paramref name="characteristicUuid"/> and raw data index <paramref name="rawDataKey"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="characteristicUuid">The uuid of the characteristic to fetch the raw data object for.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified characteristic.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.GetRawDataForMeasurement(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches raw data for the measurement with <paramref name="measurementUuid"/> and raw data index <paramref name="rawDataKey"/>. 
            </summary>
            <param name="client">The client class to use for fetching the raw data.</param>
            <param name="measurementUuid">The uuid of the measurement to fetch the raw data object for.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified measurement.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.GetRawDataForValue(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Guid,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches raw data for the value identified  by the compound key of <paramref name="measurementUuid"/> and <paramref name="characteristicUuid"/> and raw data index <paramref name="rawDataKey"/>. 
            </summary>
            <param name="client">The client class to use.</param>
            <param name="measurementUuid">The uuid of the measurement to fetch the raw data object for.</param>
            <param name="characteristicUuid">The uuid of the characteristic to fetch the raw data object for.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified measurement value.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.DeleteRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Threading.CancellationToken)">
            <summary>
            Deletes the raw data object identified by the <paramref name="info"/>.
            </summary>
            <param name="info">The raw data entry to delete.</param>
            <param name="client">The client class to use.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.DeleteRawDataForPart(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the raw data object identified by the key <paramref name="rawDataKey"/> and the part with uuid <paramref name="partUuid"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="partUuid">The uuid of the part the raw data objects belongs to.</param>
            <param name="rawDataKey">The key of the raw data object which should be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.DeleteRawDataForCharacteristic(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the raw data object identified by the key <paramref name="rawDataKey"/> for the characteristic with uuid <paramref name="characteristicUuid"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="characteristicUuid">The uuid of the part the raw data objects belongs to. </param>
            <param name="rawDataKey">The key of the raw data object which should be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.DeleteRawDataForMeasurement(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the raw data object identified by the key <paramref name="rawDataKey"/> for the measurement with uuid <paramref name="measurementUuid"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="measurementUuid">The uuid of the part the raw data objects belongs to. </param>
            <param name="rawDataKey">The key of the raw data object which should be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClientExtensions.DeleteRawDataForValue(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient,System.Guid,System.Guid,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes the raw data object identified by the compound key <paramref name="measurementUuid"/> and <paramref name="characteristicUuid"/>.
            </summary>
            <param name="client">The client class to use.</param>
            <param name="measurementUuid">The uuid of the measurement the raw data objects belongs to. </param>
            <param name="characteristicUuid">The uuid of the characteristic the raw data object belongs to.</param>
            <param name="rawDataKey">The key of the raw data object that should be deleted.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.IRawDataServiceRestClient">
            <summary>
            Client class for communicating with the REST based raw data service.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity">
            <summary>
            Enumeration that specifies the entity to which a raw data object is attached to. 
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Part">
            <summary>The raw data object belongs to a part.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Characteristic">
            <summary>The raw data object belongs to a characteristic.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Measurement">
            <summary>The raw data object belongs to a measurement.</summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Value">
            <summary>The raw data object belongs to a measurement value.</summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation">
            <summary>
            This object holds information for a raw data object like its size, key, name etc.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="entity">The entity this object belongs to.</param>
            <param name="key">A unique key that identifies this information object.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation)">
            <summary>
            Copy-Constructor.
            </summary>
            <param name="data">The raw data information object that should be copied.</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Target">
            <summary>
            Gets or sets the target object this raw data object belongs to.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Key">
            <summary>
            This is a unique key that identifies this specific raw data object for a corresponding entity. An entity (Part, Characteristic, Measurement, Value)
            can have multiple raw data object that are distinct by this key.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.KeySpecified">
            <summary>
            This property only supports the .Net serialization infrastructure and will be removed in future versions of the interface.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.FileName">
            <summary>
            Gets or sets the filename of the raw data object.
            </summary>
            <remarks>
            Please note that this filename is not unique (unlike filenames in traditional file systems).
            </remarks>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.MimeType">
            <summary>
            Gets or sets the mime type of the raw data object.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.LastModified">
            <summary>
            Gets or sets the timestamp of the last modification of the corresponding raw data object.
            </summary>
            <remarks>
            The attribute <code>LastModified</code> will be set by the Rawdata-Service.
            A user value will be ignored. 
            </remarks>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Created">
            <summary>
            Gets or sets the timestamp of the creation of the corresponding raw data object.
            </summary>
            <remarks>
            The attribute <code>Created</code> will be set by the Rawdata-Service.
            A user value will be ignored. 
            </remarks>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Size">
            <summary>
            Gets or sets the size of the raw data object in bytes.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.MD5">
            <summary>
            Gets or sets the MD5-Hash of the raw data object.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.MD5String">
            <summary>
            Gets or sets the MD5-Hash of the raw data object.
            </summary>
            <remarks>
            This property exists for serialization compatibility reasons only. This will be removed in a future version of this interface.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.ToString">
            <summary>
            Overriden <see cref="M:System.Object.ToString"/>-method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceFeatureMatrix">
            <summary>
            Provides the minimum server version for several features.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity">
            <summary>
            Specifies a concrete entity for a raw data object. If raw data is attached to an entity 
            of type <see cref="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Value"/>, the attribute <code>Uuid</code> contains a 
            compound key in the following format: <code>{MeasurementUuid}|{CharacteristicUuid}</code>.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.Guid)">
            <summary>
            Creates a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> based on the specified <code>uuid</code> and <code>entity</code>.
            </summary>
            <param name="entity">The entity to which this raw data object belongs to.</param>
            <param name="uuid">The uuid of the entity.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.#ctor(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.String)">
            <summary>
            Creates a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> based on the specified <code>uuid</code> and <code>entity</code>.
            </summary>
            <param name="entity">The entity to which this raw data object belongs to.</param>
            <param name="uuid">The uuid of the entity.</param>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.Entity">
            <summary>
            Gets or sets the entity to which this raw data object belongs to.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.Uuid">
            <summary>
            Gets or sets the uuid of the entity.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.CreateForPart(System.Guid)">
            <summary>Factory method to create a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>-object for a <see cref="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Part"/>.</summary>
            <param name="uuid">The uuid of a part.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.CreateForCharacteristic(System.Guid)">
            <summary>Factory method to create a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>-object for a <see cref="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Characteristic"/>.</summary>
            <param name="uuid">The uuid of a characteristic.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.CreateForMeasurement(System.Guid)">
            <summary>Factory method to create a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>-object for a <see cref="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Measurement"/>.</summary>
            <param name="uuid">The uuid of a measurement.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.CreateForValue(System.Guid,System.Guid)">
            <summary>Factory method to create a new <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>-object for a <see cref="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity.Value"/>.</summary>
            <remarks>
            Please note that the characteristic should belong to the part to which the specified measurement belongs to.
            </remarks>
            <param name="characteristicUuid">The uuid of a characteristic.</param>
            <param name="measurementUuid">The uuid of a measurement.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity.ToString">
            <summary>
            Overriden <see cref="M:System.Object.ToString"/>-method.
            </summary>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient">
            <summary>
            Client class for communicating with the REST based raw data service.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.#ctor(System.Uri,System.Int32,Zeiss.IMT.PiWeb.Api.Common.Client.ILoginRequestHandler)">
            <summary>
            Main Constructor. Initilization of the client class for communicating with the RawDataService via the given <paramref name="serverUri"/>
            </summary>
            <param name="serverUri">The PiWeb Server uri, including port and instance</param>
            <param name="loginRequestHandler"></param>
            <param name="maxUriLength">The uri length limit</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.GetServiceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation"/>. This method can be used for connection checking. The call returns quickly 
            and does not produce any noticeable server load. 
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.GetInterfaceInformation(System.Threading.CancellationToken)">
            <summary> 
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.Common.Data.InterfaceVersionRange"/>.
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.GetFeatureMatrix(System.Threading.CancellationToken)">
            <summary>
            Method for fetching the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceFeatureMatrix"/>
            </summary>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <returns></returns>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.ListRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity,System.String[],Zeiss.IMT.PiWeb.Api.RawDataService.Filter.Conditions.FilterCondition,System.Threading.CancellationToken)">
            <summary> 
            Fetches a list of raw data information for the <paramref name="entity"/> identified by <paramref name="uuids"/> and filtered by <paramref name="filter"/>.
            Either <paramref name="uuids" /> or <paramref name="filter"/> must have a value.
            </summary>
            <param name="entity">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> the raw data information should be fetched for.</param>
            <param name="uuids">The list of value uuids the data information should be fetched for.</param>
            <param name="filter">A condition used to filter the result.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <exception cref="T:System.InvalidOperationException">No uuids and no filter was specified.</exception>
            <exception cref="T:Zeiss.IMT.PiWeb.Api.Common.Client.OperationNotSupportedOnServerException">An attribute filter for raw data is not supported by this server.</exception>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.GetRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Int32,System.Nullable{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Fetches raw data as a byte array for the raw data item identified by <paramref name="target"/> and <paramref name="rawDataKey"/>. 
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> that specifies the raw data object that should be fetched.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified target.</param>
            <param name="expectedMd5">The md5 check sum that is expected for the result object. If this value is set, performance is better because server side round trips are reduced.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.GetRawDataThumbnail(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Int32,System.Threading.CancellationToken)">
            <summary> 
            Fetches a preview image for the specified <code>info</code>. 
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> that specifies the raw data object that should be fetched.</param>
            <param name="rawDataKey">The unique key that identifies the raw data object for the specified target.</param>
            <returns>The preview image as byte array.</returns>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.CreateRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Byte[],System.Threading.CancellationToken)">
            <summary> 
            Creates a new raw data object <paramref name="data"/> for the element specified by <paramref name="info"/>. 
            </summary>
            <param name="data">The raw data to upload.</param>
            <param name="info">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type and the uuid of the raw data that should be uploaded.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
            <remarks>
            If key speciefied by <see cref="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation.Key"/> is -1, a new key will be chosen by the server automatically. This is the preferred way.
            </remarks>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.UpdateRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation,System.Byte[],System.Threading.CancellationToken)">
            <summary> 
            Updates the raw data object <paramref name="data"/> for the element identified by <paramref name="info"/>. 
            </summary>
            <param name="data">The raw data to upload.</param>
            <param name="info">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataInformation"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type, the uuid and the key of the raw data that should be updated.</param>
            <param name="cancellationToken">A token to cancel the asynchronous operation.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataServiceRestClient.DeleteRawData(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Deletes raw data for the element identified by <paramref name="target"/> and <paramref name="rawDataKey"/>.
            </summary>
            <param name="target">The <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/> object containing the <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataEntity"/> type and the uuid of the raw data that should be deleted.</param>
            <param name="rawDataKey">The key of the raw data object which should be deleted.</param>
            <param name="cancellationToken">A token to cancel the hronous operation.</param>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntityComparer">
            <summary>
            <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> zum Vergleich zweier <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>-Objekte.
            </summary>
        </member>
        <member name="F:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntityComparer.Default">
            <summary>
            Eine Instanz dieses Objekts.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntityComparer.Equals(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity,Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity)">
            <summary>
            Bestimmt, ob die angegebenen Objekte gleich sind.
            </summary>
            <returns>
            true, wenn die angegebenen Objekte gleich sind, andernfalls false.
            </returns>
            <param name="x">Das erste zu vergleichende Objekt vom Typ <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>.</param>
            <param name="y">Das zweite zu vergleichende Objekt vom Typ <see cref="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity"/>.</param>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntityComparer.GetHashCode(Zeiss.IMT.PiWeb.Api.RawDataService.Rest.RawDataTargetEntity)">
            <summary>
                Gibt einen Hashcode für das angegebene Objekt zurück.
            </summary>
            <returns>
                Ein Hashcode für das angegebene Objekt.
            </returns>
            <param name="obj">Das <see cref="T:RawDataTargetEntity" />, für das ein Hashcode zurückgegeben werden soll.</param>
            <exception cref="T:System.ArgumentNullException">
                Der Typ von <paramref name="obj" /> ist ein Referenztyp, und
                <paramref name="obj" /> ist null.
            </exception>
        </member>
        <member name="T:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation">
            <summary>
            This class contains general information about the RawDataService, like its current version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation.VersionWsdlMajor">
            <summary>
            Gets or sets the major interface version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation.VersionWsdlMinor">
            <summary>
            Gets or sets the minor interface version.
            </summary>
        </member>
        <member name="P:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation.Version">
            <summary>
            Gets or sets the version of the server backend.
            </summary>
        </member>
        <member name="M:Zeiss.IMT.PiWeb.Api.RawDataService.Rest.ServiceInformation.ToString">
            <summary>
            Overridden <see cref="M:System.Object.ToString"/> method.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.CanBeNullAttribute">
            <summary>
            Indicates that the value of the marked element could be <c>null</c> sometimes,
            so the check for <c>null</c> is necessary before its usage.
            </summary>
            <example><code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.NotNullAttribute">
            <summary>
            Indicates that the value of the marked element could never be <c>null</c>.
            </summary>
            <example><code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.ItemNotNullAttribute">
            <summary>
            Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
            and Lazy classes to indicate that the value of a collection item, of the Task.Result property
            or of the Lazy.Value property can never be null.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.ItemCanBeNullAttribute">
            <summary>
            Can be appplied to symbols of types derived from IEnumerable as well as to symbols of Task
            and Lazy classes to indicate that the value of a collection item, of the Task.Result property
            or of the Lazy.Value property can be null.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.StringFormatMethodAttribute">
            <summary>
            Indicates that the marked method builds string by format pattern and (optional) arguments.
            Parameter, which contains format string, should be given in constructor. The format string
            should be in <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])"/>-like form.
            </summary>
            <example><code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code></example>
        </member>
        <member name="M:PiWebApi.Annotations.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">
            Specifies which parameter of an annotated method should be treated as format-string
            </param>
        </member>
        <member name="T:PiWebApi.Annotations.ValueProviderAttribute">
            <summary>
            For a parameter that is expected to be one of the limited set of values.
            Specify fields of which type should be used as values for this parameter.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.InvokerParameterNameAttribute">
            <summary>
            Indicates that the function argument should be string literal and match one
            of the parameters of the caller function. For example, ReSharper annotates
            the parameter of <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <example><code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.NotifyPropertyChangedInvocatorAttribute">
             <summary>
             Indicates that the method is contained in a type that implements
             <c>System.ComponentModel.INotifyPropertyChanged</c> interface and this method
             is used to notify that some property value changed.
             </summary>
             <remarks>
             The method should be non-static and conform to one of the supported signatures:
             <list>
             <item><c>NotifyChanged(string)</c></item>
             <item><c>NotifyChanged(params string[])</c></item>
             <item><c>NotifyChanged{T}(Expression{Func{T}})</c></item>
             <item><c>NotifyChanged{T,U}(Expression{Func{T,U}})</c></item>
             <item><c>SetProperty{T}(ref T, T, string)</c></item>
             </list>
             </remarks>
             <example><code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
             Examples of generated notifications:
             <list>
             <item><c>NotifyChanged("Property")</c></item>
             <item><c>NotifyChanged(() =&gt; Property)</c></item>
             <item><c>NotifyChanged((VM x) =&gt; x.Property)</c></item>
             <item><c>SetProperty(ref myField, value, "Property")</c></item>
             </list>
             </example>
        </member>
        <member name="T:PiWebApi.Annotations.ContractAnnotationAttribute">
            <summary>
            Describes dependency between method input and output.
            </summary>
            <syntax>
            <p>Function Definition Table syntax:</p>
            <list>
            <item>FDT      ::= FDTRow [;FDTRow]*</item>
            <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
            <item>Input    ::= ParameterName: Value [, Input]*</item>
            <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
            <item>Value    ::= true | false | null | notnull | canbenull</item>
            </list>
            If method has single input parameter, it's name could be omitted.<br/>
            Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same)
            for method output means that the methos doesn't return normally.<br/>
            <c>canbenull</c> annotation is only applicable for output parameters.<br/>
            You can use multiple <c>[ContractAnnotation]</c> for each FDT row,
            or use single attribute with rows separated by semicolon.<br/>
            </syntax>
            <examples><list>
            <item><code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code></item>
            <item><code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code></item>
            <item><code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code></item>
            <item><code>
            // A method that returns null if the parameter is null,
            // and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code></item>
            <item><code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code></item>
            </list></examples>
        </member>
        <member name="T:PiWebApi.Annotations.LocalizationRequiredAttribute">
            <summary>
            Indicates that marked element should be localized or not.
            </summary>
            <example><code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.CannotApplyEqualityOperatorAttribute">
            <summary>
            Indicates that the value of the marked type (or its derivatives)
            cannot be compared using '==' or '!=' operators and <c>Equals()</c>
            should be used instead. However, using '==' or '!=' for comparison
            with <c>null</c> is always permitted.
            </summary>
            <example><code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.BaseTypeRequiredAttribute">
            <summary>
            When applied to a target attribute, specifies a requirement for any type marked
            with the target attribute to implement or inherit specific type or types.
            </summary>
            <example><code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.UsedImplicitlyAttribute">
            <summary>
            Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library),
            so this symbol will not be marked as unused (as well as by other usage inspections).
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.MeansImplicitUseAttribute">
            <summary>
            Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes
            as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
            Indicates implicit instantiation of a type with fixed constructor signature.
            That means any unused constructor parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type.</summary>
        </member>
        <member name="T:PiWebApi.Annotations.ImplicitUseTargetFlags">
            <summary>
            Specify what is considered used implicitly when marked
            with <see cref="T:PiWebApi.Annotations.MeansImplicitUseAttribute"/> or <see cref="T:PiWebApi.Annotations.UsedImplicitlyAttribute"/>.
            </summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used.</summary>
        </member>
        <member name="T:PiWebApi.Annotations.PublicAPIAttribute">
            <summary>
            This attribute is intended to mark publicly available API
            which should not be removed and so is treated as used.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.InstantHandleAttribute">
            <summary>
            Tells code analysis engine if the parameter is completely handled when the invoked method is on stack.
            If the parameter is a delegate, indicates that delegate is executed while the method is executed.
            If the parameter is an enumerable, indicates that it is enumerated while the method is executed.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.PureAttribute">
            <summary>
            Indicates that a method does not make any observable state changes.
            The same as <c>System.Diagnostics.Contracts.PureAttribute</c>.
            </summary>
            <example><code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.PathReferenceAttribute">
            <summary>
            Indicates that a parameter is a path to a file or a folder within a web project.
            Path can be relative or absolute, starting from web root (~).
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.SourceTemplateAttribute">
            <summary>
            An extension method marked with this attribute is processed by ReSharper code completion
            as a 'Source Template'. When extension method is completed over some expression, it's source code
            is automatically expanded like a template at call site.
            </summary>
            <remarks>
            Template method body can contain valid source code and/or special comments starting with '$'.
            Text inside these comments is added as source code when the template is applied. Template parameters
            can be used either as additional method parameters or as identifiers wrapped in two '$' signs.
            Use the <see cref="T:PiWebApi.Annotations.MacroAttribute"/> attribute to specify macros for parameters.
            </remarks>
            <example>
            In this example, the 'forEach' method is a source template available over all values
            of enumerable types, producing ordinary C# 'foreach' statement and placing caret inside block:
            <code>
            [SourceTemplate]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; xs) {
              foreach (var x in xs) {
                 //$ $END$
              }
            }
            </code>
            </example>
        </member>
        <member name="T:PiWebApi.Annotations.MacroAttribute">
            <summary>
            Allows specifying a macro for a parameter of a <see cref="T:PiWebApi.Annotations.SourceTemplateAttribute">source template</see>.
            </summary>
            <remarks>
            You can apply the attribute on the whole method or on any of its additional parameters. The macro expression
            is defined in the <see cref="P:PiWebApi.Annotations.MacroAttribute.Expression"/> property. When applied on a method, the target
            template parameter is defined in the <see cref="P:PiWebApi.Annotations.MacroAttribute.Target"/> property. To apply the macro silently
            for the parameter, set the <see cref="P:PiWebApi.Annotations.MacroAttribute.Editable"/> property value = -1.
            </remarks>
            <example>
            Applying the attribute on a source template method:
            <code>
            [SourceTemplate, Macro(Target = "item", Expression = "suggestVariableName()")]
            public static void forEach&lt;T&gt;(this IEnumerable&lt;T&gt; collection) {
              foreach (var item in collection) {
                //$ $END$
              }
            }
            </code>
            Applying the attribute on a template method parameter:
            <code>
            [SourceTemplate]
            public static void something(this Entity x, [Macro(Expression = "guid()", Editable = -1)] string newguid) {
              /*$ var $x$Id = "$newguid$" + x.ToString();
              x.DoSomething($x$Id); */
            }
            </code>
            </example>
        </member>
        <member name="P:PiWebApi.Annotations.MacroAttribute.Expression">
            <summary>
            Allows specifying a macro that will be executed for a <see cref="T:PiWebApi.Annotations.SourceTemplateAttribute">source template</see>
            parameter when the template is expanded.
            </summary>
        </member>
        <member name="P:PiWebApi.Annotations.MacroAttribute.Editable">
            <summary>
            Allows specifying which occurrence of the target parameter becomes editable when the template is deployed.
            </summary>
            <remarks>
            If the target parameter is used several times in the template, only one occurrence becomes editable;
            other occurrences are changed synchronously. To specify the zero-based index of the editable occurrence,
            use values >= 0. To make the parameter non-editable when the template is expanded, use -1.
            </remarks>>
        </member>
        <member name="P:PiWebApi.Annotations.MacroAttribute.Target">
            <summary>
            Identifies the target parameter of a <see cref="T:PiWebApi.Annotations.SourceTemplateAttribute">source template</see> if the
            <see cref="T:PiWebApi.Annotations.MacroAttribute"/> is applied on a template method.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcActionAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC action. If applied to a method, the MVC action name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcAreaAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC area.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcControllerAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is
            an MVC controller. If applied to a method, the MVC controller name is calculated
            implicitly from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcMasterAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcModelTypeAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute
            for custom wrappers similar to <c>System.Web.Mvc.Controller.View(String, Object)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcPartialViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC
            partial view. If applied to a method, the MVC partial view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcSupressViewErrorAttribute">
            <summary>
            ASP.NET MVC attribute. Allows disabling inspections for MVC views within a class or a method.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcDisplayTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC display template.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcEditorTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template.
            Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcTemplateAttribute">
            <summary>
            ASP.NET MVC attribute. Indicates that a parameter is an MVC template.
            Use this attribute for custom wrappers similar to
            <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcViewAttribute">
            <summary>
            ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter
            is an MVC view. If applied to a method, the MVC view name is calculated implicitly
            from the context. Use this attribute for custom wrappers similar to
            <c>System.Web.Mvc.Controller.View(Object)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AspMvcActionSelectorAttribute">
            <summary>
            ASP.NET MVC attribute. When applied to a parameter of an attribute,
            indicates that this parameter is an MVC action name.
            </summary>
            <example><code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code></example>
        </member>
        <member name="T:PiWebApi.Annotations.RazorSectionAttribute">
            <summary>
            Razor attribute. Indicates that a parameter or a method is a Razor section.
            Use this attribute for custom wrappers similar to 
            <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.CollectionAccessAttribute">
            <summary>
            Indicates how method, constructor invocation or property access
            over collection type affects content of the collection.
            </summary>
        </member>
        <member name="F:PiWebApi.Annotations.CollectionAccessType.None">
            <summary>Method does not use or modify content of the collection.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.CollectionAccessType.Read">
            <summary>Method only reads content of the collection but does not modify it.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.CollectionAccessType.ModifyExistingContent">
            <summary>Method can change content of the collection but does not add new elements.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.CollectionAccessType.UpdatedContentExplicit">
            <summary>Method can add new elements to the collection. This Enum entries is needed to avoid FxCop error "DoNotMarkEnumsWithFlags".</summary>
        </member>
        <member name="F:PiWebApi.Annotations.CollectionAccessType.UpdatedContent">
            <summary>Method can add new elements to the collection.</summary>
        </member>
        <member name="T:PiWebApi.Annotations.AssertionMethodAttribute">
            <summary>
            Indicates that the marked method is assertion method, i.e. it halts control flow if
            one of the conditions is satisfied. To set the condition, mark one of the parameters with 
            <see cref="T:PiWebApi.Annotations.AssertionConditionAttribute"/> attribute.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AssertionConditionAttribute">
            <summary>
            Indicates the condition parameter of the assertion method. The method itself should be
            marked by <see cref="T:PiWebApi.Annotations.AssertionMethodAttribute"/> attribute. The mandatory argument of
            the attribute is the assertion type.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.AssertionConditionType">
            <summary>
            Specifies assertion type. If the assertion method argument satisfies the condition,
            then the execution continues. Otherwise, execution is assumed to be halted.
            </summary>
        </member>
        <member name="F:PiWebApi.Annotations.AssertionConditionType.IS_TRUE">
            <summary>Marked parameter should be evaluated to true.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.AssertionConditionType.IS_FALSE">
            <summary>Marked parameter should be evaluated to false.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.AssertionConditionType.IS_NULL">
            <summary>Marked parameter should be evaluated to null value.</summary>
        </member>
        <member name="F:PiWebApi.Annotations.AssertionConditionType.IS_NOT_NULL">
            <summary>Marked parameter should be evaluated to not null value.</summary>
        </member>
        <member name="T:PiWebApi.Annotations.TerminatesProgramAttribute">
            <summary>
            Indicates that the marked method unconditionally terminates control flow execution.
            For example, it could unconditionally throw exception.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.LinqTunnelAttribute">
            <summary>
            Indicates that method is pure LINQ method, with postponed enumeration (like Enumerable.Select,
            .Where). This annotation allows inference of [InstantHandle] annotation for parameters
            of delegate type by analyzing LINQ method chains.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.NoEnumerationAttribute">
            <summary>
            Indicates that IEnumerable, passed as parameter, is not enumerated.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.RegexPatternAttribute">
            <summary>
            Indicates that parameter is regular expression pattern.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.XamlItemsControlAttribute">
            <summary>
            XAML attribute. Indicates the type that has <c>ItemsSource</c> property and should be treated
            as <c>ItemsControl</c>-derived type, to enable inner items <c>DataContext</c> type resolve.
            </summary>
        </member>
        <member name="T:PiWebApi.Annotations.XamlItemBindingOfItemsControlAttribute">
            <summary>
            XAML attibute. Indicates the property of some <c>BindingBase</c>-derived type, that
            is used to bind some item of <c>ItemsControl</c>-derived type. This annotation will
            enable the <c>DataContext</c> type resolve for XAML bindings for such properties.
            </summary>
            <remarks>
            Property should have the tree ancestor of the <c>ItemsControl</c> type or
            marked with the <see cref="T:PiWebApi.Annotations.XamlItemsControlAttribute"/> attribute.
            </remarks>
        </member>
        <member name="T:PiWebApi.Annotations.NoReorder">
            <summary>
            Prevents the Member Reordering feature from tossing members of the marked class.
            </summary>
            <remarks>
            The attribute must be mentioned in your member reordering patterns
            </remarks>
        </member>
    </members>
</doc>
